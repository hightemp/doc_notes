(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{492:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"какие-типы-данных-существют-в-php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#какие-типы-данных-существют-в-php"}},[t._v("#")]),t._v(" Какие типы данных существют в PHP")]),t._v(" "),s("p",[t._v("PHP поддерживает множество типов данных, включая:")]),t._v(" "),s("ol",[s("li",[t._v("Integer - целые числа")]),t._v(" "),s("li",[t._v("Float - числа с плавающей точкой")]),t._v(" "),s("li",[t._v("String - строки")]),t._v(" "),s("li",[t._v("Boolean - логические значения true и false")]),t._v(" "),s("li",[t._v("Array - массивы")]),t._v(" "),s("li",[t._v("Object - объекты")]),t._v(" "),s("li",[t._v("Null - пустое значение")]),t._v(" "),s("li",[t._v("Resource - специальный тип данных, который используется для работы с внешними ресурсами, такими как файлы и базы данных.")])]),t._v(" "),s("p",[t._v("PHP также поддерживает специальный тип данных - mixed, который может содержать значения любого типа данных.")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Конечно, вот некоторые часто задаваемые вопросы на собеседовании на позицию PHP программиста:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Что такое PHP?\nPHP - это язык программирования, который используется для создания динамических веб-страниц.")])]),t._v(" "),s("li",[s("p",[t._v("Какие преимущества у PHP?\nОдин из главных преимуществ PHP - это то, что он является бесплатным и открытым языком программирования. Кроме того, он легко интегрируется с другими языками программирования, имеет огромное сообщество разработчиков и множество библиотек и фреймворков.")])]),t._v(" "),s("li",[s("p",[t._v("Что такое переменные в PHP?\nПеременные в PHP - это именованные контейнеры для хранения данных. Они могут содержать любой тип данных, включая числа, строки, массивы и объекты.")])]),t._v(" "),s("li",[s("p",[t._v("Что такое функции в PHP?\nФункции в PHP - это блоки кода, которые могут быть вызваны из других частей программы. Они могут принимать аргументы и возвращать значения.")])]),t._v(" "),s("li",[s("p",[t._v("Какие фреймворки для PHP вы знаете?\nСуществует множество фреймворков для PHP, но некоторые из наиболее популярных включают Laravel, Symfony, CodeIgniter и Yii.")])]),t._v(" "),s("li",[s("p",[t._v("Что такое SQL Injection и как ее предотвратить в PHP?\nSQL Injection - это атака, при которой злоумышленник может внедрить вредоносный код в SQL запрос и получить несанкционированный доступ к базе данных. Для предотвращения SQL Injection в PHP следует использовать подготовленные запросы и фильтрацию входных данных.")])]),t._v(" "),s("li",[s("p",[t._v("Какие типы сессий поддерживает PHP?\nPHP поддерживает несколько типов сессий, включая файловые, базы данных, Memcached и Redis.")])]),t._v(" "),s("li",[s("p",[t._v("Какие вы знаете методы передачи данных между страницами в PHP?\nВ PHP данные могут передаваться через GET и POST запросы, а также через сессии и куки.")])]),t._v(" "),s("li",[s("p",[t._v("Какие вы знаете основные принципы ООП в PHP?\nОсновные принципы ООП в PHP включают инкапсуляцию, наследование и полиморфизм.")])]),t._v(" "),s("li",[s("p",[t._v("Какие вы знаете инструменты для отладки PHP кода?\nНекоторые из инструментов для отладки PHP кода включают Xdebug, Zend Debugger и PHP Debug Bar.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете оптимизировать производительность PHP приложения?\nСуществует множество способов оптимизации производительности PHP приложений, включая использование кэширования, оптимизацию базы данных, минимизацию запросов к базе данных, использование CDN и оптимизацию изображений.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете обрабатывать ошибки в PHP приложении?\nДля обработки ошибок в PHP приложении следует использовать механизмы исключений и логирования. Механизмы исключений позволяют обрабатывать ошибки в коде, а логирование позволяет записывать ошибки и предупреждения в специальный файл или базу данных.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете защищать PHP приложение от взлома?\nДля защиты PHP приложения от взлома следует использовать хеширование паролей, подготовленные запросы, фильтрацию входных данных, защиту от CSRF и XSS атак, а также использование HTTPS.")])]),t._v(" "),s("li",[s("p",[t._v("Какие инструменты вы используете для управления зависимостями в PHP проектах?\nНекоторые из инструментов для управления зависимостями в PHP проектах включают Composer и Pear.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете тестировать свой PHP код?\nДля тестирования PHP кода следует использовать Unit тестирование с использованием фреймворков, таких как PHPUnit. Также можно использовать функциональное тестирование с помощью инструментов, таких как Selenium.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете оптимизировать производительность своего PHP приложения?\nДля оптимизации производительности PHP приложения можно использовать следующие подходы:")])])]),t._v(" "),s("ul",[s("li",[t._v("Оптимизировать запросы к базе данных;")]),t._v(" "),s("li",[t._v("Использовать кэширование данных;")]),t._v(" "),s("li",[t._v("Минимизировать количество запросов к базе данных;")]),t._v(" "),s("li",[t._v("Использовать сжатие данных;")]),t._v(" "),s("li",[t._v("Использовать оптимизированные библиотеки и фреймворки;")]),t._v(" "),s("li",[t._v("Использовать CDN для доставки статических файлов.")])]),t._v(" "),s("ol",{attrs:{start:"17"}},[s("li",[s("p",[t._v("Какую базу данных вы предпочитаете для PHP приложений?\nPHP поддерживает множество баз данных, включая MySQL, PostgreSQL, SQLite и MongoDB. Выбор базы данных зависит от требований проекта и предпочтений разработчика.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете управлять версиями своего PHP кода?\nДля управления версиями PHP кода можно использовать системы контроля версий, такие как Git или SVN.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете обрабатывать ошибки в своем PHP приложении?\nДля обработки ошибок в PHP приложении можно использовать механизмы исключений, а также логирование ошибок в файлы журналов или в базу данных.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете обеспечивать безопасность в вашем PHP приложении?\nДля обеспечения безопасности в PHP приложении необходимо использовать механизмы аутентификации и авторизации, фильтрацию и валидацию входных данных, защиту от CSRF и XSS атак, а также использование HTTPS.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете оптимизировать производительность вашего PHP приложения?\nДля оптимизации производительности PHP приложения следует использовать кэширование данных, оптимизировать запросы к базе данных, сжимать и минимизировать статические ресурсы, такие как CSS и JS, использовать CDN, а также оптимизировать код PHP и базу данных.")])]),t._v(" "),s("li",[s("p",[t._v("Как вы будете работать с открытым исходным кодом в PHP?\nДля работы с открытым исходным кодом в PHP следует использовать инструменты управления зависимостями, такие как Composer, и изучать документацию и примеры использования библиотек и фреймворков.")])]),t._v(" "),s("li",[s("p",[t._v("Какие вы знаете фреймворки для разработки PHP приложений?\nНекоторые из фреймворков для разработки PHP приложений включают Laravel, Symfony, Yii, CodeIgniter и Zend Framework.")])])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Конечно! Вот несколько вопросов, которые могут быть полезны при собеседовании на должность PHP разработчика:")]),t._v(" "),s("ol",[s("li",[t._v("Что такое PHP, и что вы можете рассказать о его основных особенностях?")]),t._v(" "),s("li",[t._v("Как вы работаете с базами данных в PHP? Какие базы данных вы использовали в своих проектах?")]),t._v(" "),s("li",[t._v("Как вы организуете свой код в PHP? Какие паттерны проектирования вы используете?")]),t._v(" "),s("li",[t._v("Расскажите о своем опыте работы с фреймворками PHP, такими как Laravel или Symfony.")]),t._v(" "),s("li",[t._v("Как вы управляете зависимостями в PHP? Какие инструменты вы используете для управления зависимостями?")]),t._v(" "),s("li",[t._v("Как вы тестируете свой код в PHP? Какие инструменты вы используете для тестирования?")]),t._v(" "),s("li",[t._v("Как вы управляете версиями своего кода в PHP? Какие инструменты вы используете для управления версиями?")]),t._v(" "),s("li",[t._v("Как вы обеспечиваете безопасность своих приложений PHP? Какие методы и инструменты вы используете для обеспечения безопасности?")]),t._v(" "),s("li",[t._v("Как вы работаете с API в PHP? Какие инструменты вы используете для работы с API?")]),t._v(" "),s("li",[t._v("Расскажите о своем опыте работы с другими технологиями, например, JavaScript или CSS. Как вы использовали их в своих проектах на PHP?")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"ответь-на-вопрос-как-вы-организуете-свои-код-в-php-какие-паттерны-проектирования-вы-используете"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ответь-на-вопрос-как-вы-организуете-свои-код-в-php-какие-паттерны-проектирования-вы-используете"}},[t._v("#")]),t._v(" Ответь на вопрос - Как вы организуете свой код в PHP? Какие паттерны проектирования вы используете?")]),t._v(" "),s("p",[t._v("Организация кода в PHP очень важна для создания масштабируемых и поддерживаемых приложений. Я обычно использую модульный подход, где каждый модуль имеет свою собственную структуру папок и файлов.")]),t._v(" "),s("p",[t._v("Кроме того, я также использую паттерны проектирования, такие как MVC (Model-View-Controller), чтобы разделить код на логические компоненты и упростить его поддержку. Я также использую Dependency Injection, чтобы уменьшить связанность между компонентами и сделать код более гибким.")]),t._v(" "),s("p",[t._v("Другие паттерны, которые я часто использую, включают Singleton, Factory и Strategy. Эти паттерны помогают сделать код более поддерживаемым и расширяемым, а также повышают его качество и стабильность.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"ответь-как-вы-работаете-с-api-в-php-какие-инструменты-вы-используете-для-работы-с-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ответь-как-вы-работаете-с-api-в-php-какие-инструменты-вы-используете-для-работы-с-api"}},[t._v("#")]),t._v(" Ответь - Как вы работаете с API в PHP? Какие инструменты вы используете для работы с API?")]),t._v(" "),s("p",[t._v("Для работы с API в PHP я использую различные инструменты и библиотеки, такие как GuzzleHTTP, cURL и PHP HTTP Client. Эти инструменты позволяют мне отправлять запросы к API и обрабатывать полученные ответы.")]),t._v(" "),s("p",[t._v("Я также часто использую форматы данных, такие как JSON и XML, для обмена данными с API. Кроме того, я уделяю большое внимание обработке ошибок и проверке возвращаемых данных, чтобы гарантировать надежность и безопасность моих приложений.")]),t._v(" "),s("p",[t._v("Наконец, я также использую документацию API и инструменты для тестирования API, такие как Postman, чтобы облегчить процесс разработки и отладки.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"ответь-как-вы-обеспечиваете-безопасность-своих-приложении-php-какие-методы-и-инструменты-вы-используете-для-обеспечения-безопасности"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ответь-как-вы-обеспечиваете-безопасность-своих-приложении-php-какие-методы-и-инструменты-вы-используете-для-обеспечения-безопасности"}},[t._v("#")]),t._v(" Ответь - Как вы обеспечиваете безопасность своих приложений PHP? Какие методы и инструменты вы используете для обеспечения безопасности?")]),t._v(" "),s("p",[t._v("Я применяю несколько методов и инструментов для обеспечения безопасности своих приложений PHP.")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Я использую подготовленные SQL-запросы, чтобы предотвратить атаки SQL-инъекций.")])]),t._v(" "),s("li",[s("p",[t._v("Я использую фильтрацию ввода данных и валидацию, чтобы предотвратить атаки XSS, CSRF и другие виды атак.")])]),t._v(" "),s("li",[s("p",[t._v("Я использую хэширование паролей, чтобы обеспечить безопасность пользовательских учетных записей.")])]),t._v(" "),s("li",[s("p",[t._v("Я убеждаюсь, что мои приложения PHP обновляются до последних версий, чтобы избежать уязвимостей в безопасности.")])]),t._v(" "),s("li",[s("p",[t._v("Я также использую инструменты, такие как PHP Security Checker, для обнаружения уязвимостей в моих приложениях и их исправления.")])])]),t._v(" "),s("p",[t._v("В целом, я уделяю большое внимание безопасности своих приложений PHP и использую различные методы и инструменты для обеспечения их безопасности.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"какие-10-патернов-проектирования-используются-чаще-всего"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#какие-10-патернов-проектирования-используются-чаще-всего"}},[t._v("#")]),t._v(" Какие 10 патернов проектирования используются чаще всего?")]),t._v(" "),s("p",[t._v("Некоторые из наиболее распространенных паттернов проектирования включают:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("MVC (Model-View-Controller) - используется для разделения приложения на три основных компонента: модель, представление и контроллер.")])]),t._v(" "),s("li",[s("p",[t._v("Singleton - гарантирует, что класс имеет только один экземпляр и обеспечивает глобальную точку доступа к этому экземпляру.")])]),t._v(" "),s("li",[s("p",[t._v("Factory - используется для создания объектов без необходимости явно указывать классы объектов.")])]),t._v(" "),s("li",[s("p",[t._v("Strategy - позволяет выбирать алгоритм во время выполнения программы.")])]),t._v(" "),s("li",[s("p",[t._v("Observer - используется для оповещения объектов об изменениях в других объектах.")])]),t._v(" "),s("li",[s("p",[t._v("Decorator - добавляет новые функции к существующему объекту, не меняя его структуру.")])]),t._v(" "),s("li",[s("p",[t._v("Adapter - позволяет объектам с несовместимыми интерфейсами работать вместе.")])]),t._v(" "),s("li",[s("p",[t._v("Template Method - определяет основу алгоритма, но позволяет подклассам переопределять определенные шаги.")])]),t._v(" "),s("li",[s("p",[t._v("Iterator - обеспечивает доступ к элементам коллекции, не раскрывая ее внутреннюю структуру.")])]),t._v(" "),s("li",[s("p",[t._v("Dependency Injection - позволяет объектам получать зависимости из внешних источников, вместо того чтобы их создавать самостоятельно.")])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"раскажи-про-особенности-типов-в-php-и-их-преобразования-приведи-примеры"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#раскажи-про-особенности-типов-в-php-и-их-преобразования-приведи-примеры"}},[t._v("#")]),t._v(" Раскажи про особенности типов в PHP и их преобразования, приведи примеры")]),t._v(" "),s("p",[t._v("В PHP есть несколько типов данных, которые могут взаимодействовать друг с другом и изменять свои значения в зависимости от контекста:")]),t._v(" "),s("ol",[s("li",[t._v("Целые числа (int) - представляются целыми числами, например, 42.")]),t._v(" "),s("li",[t._v("Вещественные числа (float) - представляются числами с плавающей точкой, например, 3.14.")]),t._v(" "),s("li",[t._v('Строки (string) - представляются последовательностями символов, заключенными в кавычки, например, "Hello, world!".')]),t._v(" "),s("li",[t._v("Логические значения (bool) - представляются значениями true (истина) или false (ложь).")]),t._v(" "),s("li",[t._v("Массивы (array) - представляются наборами значений, хранящихся под определенными ключами.")]),t._v(" "),s("li",[t._v("Объекты (object) - представляются экземплярами классов.")])]),t._v(" "),s("p",[t._v("Преобразования типов в PHP происходят автоматически или явно через функции преобразования типов. Например, при сложении числа и строки в PHP происходит автоматическое преобразование типов, при котором число приводится к строке:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"The answer is "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "The answer is 42"')]),t._v("\n")])])]),s("p",[t._v("Также можно явно преобразовывать типы данных в PHP с помощью функций, таких как intval() или strval():")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"42"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num_int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 42")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str_val")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "3.14"')]),t._v("\n")])])]),s("p",[t._v("Однако при преобразовании типов данных в PHP необходимо быть осторожным, так как некоторые преобразования могут приводить к потере данных или неправильному результату.")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Хорошо, вот таблица сравнения типов данных в PHP и примерами их преобразований:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Тип данных")]),t._v(" "),s("th",[t._v("Описание")]),t._v(" "),s("th",[t._v("Примеры преобразования")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("Логический тип данных. Может принимать значения true или false.")]),t._v(" "),s("td",[s("code",[t._v("$bool_val = true;")]),s("br"),s("code",[t._v("$int_val = (int) $bool_val;")]),s("br"),s("code",[t._v("$str_val = strval($bool_val);")])])]),t._v(" "),s("tr",[s("td",[t._v("integer")]),t._v(" "),s("td",[t._v("Целочисленный тип данных.")]),t._v(" "),s("td",[s("code",[t._v("$int_val = 42;")]),s("br"),s("code",[t._v("$float_val = floatval($int_val);")]),s("br"),s("code",[t._v("$str_val = strval($int_val);")])])]),t._v(" "),s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("Число с плавающей точкой.")]),t._v(" "),s("td",[s("code",[t._v("$float_val = 3.14;")]),s("br"),s("code",[t._v("$int_val = intval($float_val);")]),s("br"),s("code",[t._v("$str_val = strval($float_val);")])])]),t._v(" "),s("tr",[s("td",[t._v("string")]),t._v(" "),s("td",[t._v("Строковый тип данных.")]),t._v(" "),s("td",[s("code",[t._v('$str_val = "Hello, world!";')]),s("br"),s("code",[t._v("$int_val = intval($str_val);")]),s("br"),s("code",[t._v("$float_val = floatval($str_val);")])])]),t._v(" "),s("tr",[s("td",[t._v("array")]),t._v(" "),s("td",[t._v("Массив.")]),t._v(" "),s("td",[s("code",[t._v('$arr_val = ["apple", "banana", "cherry"];')]),s("br"),s("code",[t._v('$str_val = implode(", ", $arr_val);')]),s("br"),s("code",[t._v("$obj_val = (object) $arr_val;")])])]),t._v(" "),s("tr",[s("td",[t._v("object")]),t._v(" "),s("td",[t._v("Объект.")]),t._v(" "),s("td",[s("code",[t._v("$obj_val = new stdClass();")]),s("br"),s("code",[t._v("$arr_val = (array) $obj_val;")]),s("br"),s("code",[t._v("$str_val = strval($obj_val);")])])]),t._v(" "),s("tr",[s("td",[t._v("null")]),t._v(" "),s("td",[t._v("Пустое значение.")]),t._v(" "),s("td",[s("code",[t._v("$null_val = null;")]),s("br"),s("code",[t._v("$str_val = strval($null_val);")]),s("br"),s("code",[t._v("$int_val = intval($null_val);")])])])])]),t._v(" "),s("p",[t._v("Это лишь некоторые примеры преобразований типов данных в PHP. Конечно, существуют и другие функции и методы преобразования, которые могут быть полезны в различных ситуациях.")]),t._v(" "),s("h2",{attrs:{id:"что-такое-в-php-замыкание-и-как-оно-реализуется"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#что-такое-в-php-замыкание-и-как-оно-реализуется"}},[t._v("#")]),t._v(" что такое в PHP замыкание и как оно реализуется")]),t._v(" "),s("p",[t._v("Замыкание (closure) в PHP - это функция, которая может ссылаться на переменные из своего лексического окружения, даже если она вызывается вне этого окружения. Она создается с помощью ключевого слова "),s("code",[t._v("function")]),t._v(" и может быть присвоена переменной или использоваться как аргумент другой функции.")]),t._v(" "),s("p",[t._v("Пример:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$counter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),s("p",[t._v("В этом примере функция "),s("code",[t._v("counter")]),t._v(" возвращает замыкание, которое ссылается на переменную "),s("code",[t._v("$count")]),t._v(" из своего лексического окружения. При каждом вызове замыкания переменная "),s("code",[t._v("$count")]),t._v(" увеличивается на единицу и возвращается ее текущее значение.")]),t._v(" "),s("p",[t._v("Замыкание реализуется путем сохранения ссылки на лексическое окружение функции при ее создании. Это позволяет замыканию обращаться к переменным из этого окружения, даже если оно вызывается в другом контексте.")]),t._v(" "),s("h2",{attrs:{id:"что-такое-абстрактные-класс-в-php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#что-такое-абстрактные-класс-в-php"}},[t._v("#")]),t._v(" Что такое абстрактные класс в php?")]),t._v(" "),s("p",[t._v("Абстрактный класс в PHP - это класс, который не может быть создан напрямую, но может служить для определения методов и свойств, которые должны быть реализованы в конкретных подклассах. Абстрактные классы не могут быть инициализированы, потому что они предназначены только для использования в качестве классов-родителей, которые содержат общие методы и свойства.")]),t._v(" "),s("p",[t._v("Абстрактные классы создаются ключевым словом "),s("code",[t._v("abstract")]),t._v(". Методы в абстрактных классах также должны быть определены ключевым словом "),s("code",[t._v("abstract")]),t._v(". Это указывает, что методы должны быть переопределены в подклассах, которые наследуют абстрактный класс.")]),t._v(" "),s("p",[t._v("Пример абстрактного класса:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Animal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//свойства")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//абстрактный метод")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("makeSound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//обычный метод")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("setColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Dog")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//реализация абстрактного метода")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("makeSound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Bark"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dog")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dog")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Brown"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dog")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//выведет "Brown"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dog")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeSound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//выведет "Bark"')]),t._v("\n")])])]),s("p",[t._v("В данном примере, "),s("code",[t._v("Animal")]),t._v(" - абстрактный класс, содержит абстрактный метод "),s("code",[t._v("makeSound")]),t._v(", который должен быть определен в классе-наследнике. Класс "),s("code",[t._v("Dog")]),t._v(" наследует "),s("code",[t._v("Animal")]),t._v(" и реализует метод "),s("code",[t._v("makeSound")]),t._v(". Обращение к свойству "),s("code",[t._v("$color")]),t._v(" и методу "),s("code",[t._v("makeSound")]),t._v(" класса "),s("code",[t._v("Dog")]),t._v(" происходит через метод "),s("code",[t._v("setColor")]),t._v(", наследуемый от класса "),s("code",[t._v("Animal")]),t._v(".")]),t._v(" "),s("p",[t._v("Использование абстрактных классов позволяет создавать общие функциональные элементы для нескольких объектов одного типа и упрощает поддержку кода в будущем.")]),t._v(" "),s("h2",{attrs:{id:"какие-принципы-solid-реализует-патерн-decorator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#какие-принципы-solid-реализует-патерн-decorator"}},[t._v("#")]),t._v(" Какие принципы solid реализует патерн Decorator?")]),t._v(" "),s("p",[t._v("Паттерн Decorator в PHP реализует следующие принципы SOLID:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Принцип единственной обязанности (The Single Responsibility Principle, SRP):\nDecorator позволяет добавлять функциональность к классам без модификации основного кода. Каждый декоратор имеет только одну обязанность - добавление своей функциональности к основному объекту.")])]),t._v(" "),s("li",[s("p",[t._v("Принцип открытости/закрытости (The Open/Closed Principle, OCP):\nDecorator расширяет функциональность основного объекта без изменения его существующего кода, что соответствует принципу OCP.")])]),t._v(" "),s("li",[s("p",[t._v("Принцип подстановки Барбары Лисков (The Liskov Substitution Principle, LSP):\nDecorator реализует интерфейс или абстрактный класс, что позволяет использовать декорированные объекты везде, где принимаются объекты интерфейса или абстрактного класса.")])]),t._v(" "),s("li",[s("p",[t._v("Принцип разделения интерфейса (The Interface Segregation Principle, ISP):\nDecorator следует этому принципу, поскольку каждый декоратор имеет свой интерфейс, который определяет только те функции, которые должны быть добавлены объекту.")])]),t._v(" "),s("li",[s("p",[t._v("Принцип инверсии зависимостей (The Dependency Inversion Principle, DIP):\nDecorator использует абстрактный класс или интерфейс в качестве базового класса, что соответствует DIP.")])])]),t._v(" "),s("p",[t._v("В целом, паттерн Decorator хорошо соответствует принципам SOLID, поскольку он позволяет добавлять функциональность без модификации существующего кода, использует интерфейсы и абстрактные классы и упрощает разработку и поддержку кода в долгосрочной перспективе.")]),t._v(" "),s("h2",{attrs:{id:"что-реализует-паттерн-adapter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#что-реализует-паттерн-adapter"}},[t._v("#")]),t._v(" Что реализует паттерн Adapter?")]),t._v(" "),s("p",[t._v("Паттерн Adapter в PHP реализует преобразование интерфейса одного класса в интерфейс другого класса, что позволяет объектам с несовместимыми интерфейсами работать вместе.")]),t._v(" "),s("p",[t._v("Классическим примером использования паттерна Adapter являтся работа с объектами, которые используют различные сторонние библиотеки с разными интерфейсами. Паттерн Adapter позволяет использовать эти объекты, как будто они имеют единый интерфейс.")]),t._v(" "),s("p",[t._v("Пример реализации паттерна Adapter в PHP:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Интерфейс "Target"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Target")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Adaptee"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Adaptee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("specificRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Specific request."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Адаптер")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Adapter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Target")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("__construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("Adaptee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("adaptee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Adapter: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("adaptee")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("specificRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Клиентский код")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("clientCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("Target")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Adaptee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Adaptee: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("specificRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Adaptee: Specific request."')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adapter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Adapter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adaptee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clientCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$adapter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Adapter: Specific request."')]),t._v("\n")])])]),s("p",[t._v("В данном примере, класс "),s("code",[t._v("Adaptee")]),t._v(" имеет метод "),s("code",[t._v("specificRequest")]),t._v(", который нам нужно адаптировать для использования с "),s("code",[t._v("Target")]),t._v(". Мы создали класс-адаптер, который реализует интерфейс "),s("code",[t._v("Target")]),t._v(" и содержит объект "),s("code",[t._v("Adaptee")]),t._v(". Метод "),s("code",[t._v("request")]),t._v(" класса-адаптера вызывает метод "),s("code",[t._v("specificRequest")]),t._v(" объекта "),s("code",[t._v("Adaptee")]),t._v(", достигая цели адаптации.")]),t._v(" "),s("p",[t._v("Паттерн Adapter позволяет избежать переделывания больших объемов кода при обновлении существующих систем, позволяет работать с объектами, которые используют несовместимые интерфейсы, упрощает тестирование и сопровождение системы.")]),t._v(" "),s("h2",{attrs:{id:"что-реализует-паттерн-facade"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#что-реализует-паттерн-facade"}},[t._v("#")]),t._v(" что реализует паттерн Facade?")]),t._v(" "),s("p",[t._v("Паттерн Facade в PHP реализует простой интерфейс для сложной системы или набора объектов, скрывая сложности и предоставляя упрощенный доступ к основным функциональным возможностям системы.")]),t._v(" "),s("p",[t._v("Данный паттерн можно использовать для создания уровня абстракции над более сложной системой, скрывая детали ее работы от клиентского кода. Паттерн Facade позволяет решить проблему управления сложностью системы и чтобы клиентский код мог быть более простым, читаемым и гибким.")]),t._v(" "),s("p",[t._v("В простейшем виде реализация паттерна Facade может выглядеть так:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Facade")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("__construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("Subsystem1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("Subsystem2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Subsystem1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subsystem2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Subsystem2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Простой интерфейс метода")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("operation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Facade initializes subsystems:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operation1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operation1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Facade orders subsystems to perform the action:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operationN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("subsystem2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operationZ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"напиши-что-такое-зацепление-и-связанность"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#напиши-что-такое-зацепление-и-связанность"}},[t._v("#")]),t._v(" Напиши что такое зацепление и связанность?")]),t._v(" "),s("p",[t._v("Зацепление (eng. coupling) - это степень, до которой один компонент программного обеспечения зависит от другого. В отношении программного обеспечения, зацепление - это мера того, насколько тесно две или более компонент связаны между собой.")]),t._v(" "),s("p",[t._v("Связанность (eng. cohesion) - это степень, до которой элементы внутри одного модуля находятся в логической и функциональной связи друг с другом. Связанность - это мера того, насколько компонент программного обеспечения нацелены на выполнение определенной задачи в отдельности, не затрагивая другие части системы.")]),t._v(" "),s("p",[t._v("Таким образом, зацепление и связанность - это два взаимосвязанных понятия, которые используются для оценки качества программного обеспечения. Цель состоит в том, чтобы создать программы, имеющие высокую степень связанности и минимальное зацепление.")]),t._v(" "),s("h2",{attrs:{id:"что-такое-jwt-токен"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#что-такое-jwt-токен"}},[t._v("#")]),t._v(" Что такое jwt токен?")]),t._v(" "),s("p",[t._v("JWT (JSON Web Token) - это стандарт для создания JSON-объекта, используемого для передачи информации между сторонами в виде объека. Этот объект состоит из трех частей: заголовка (header), полезной нагрузки (payload) и подписи (signature).")]),t._v(" "),s("p",[t._v("JWT-токен используется для аутентификации и авторизации пользователей, когда они обращаются к защищенным ресурсам на веб-сервере. Когда пользователь выполняет вход в приложение, сервер создает JWT-токен для пользователя и отправляет его клиентским приложениям. Клиентское приложение может сохранить этот токен в браузерном хранилище или в памяти приложения. При последующих запросах клиентское приложение включает этот токен в заголовок каждого запроса, чтобы показать, что пользователь аутентифицирован, и запросить доступ к защищенным ресурсам.")]),t._v(" "),s("p",[t._v("Токен JWT имеет следующие преимущества:")]),t._v(" "),s("ul",[s("li",[t._v("Контроль доступа: токен JWT может содержать информацию о том, к каким ресурсам пользователь имеет доступ.")]),t._v(" "),s("li",[t._v("Переносимость: токен JWT может передаваться между клиентским и серверным приложениями без необходимости хранения информации на сервере.")]),t._v(" "),s("li",[t._v("Безопасность: токен JWT может быть зашифрован и подписан для защиты от подделки и хакерских атак.")])]),t._v(" "),s("p",[t._v("Отличительной особенностью JWT-токена является то, что его можно декодировать и проверить на целостность без необходимости обращения к серверу, что упрощает и ускоряет процесс работы с токенами и повышает производительность.")])])}),[],!1,null,null,null);s.default=e.exports}}]);