(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{486:function(e,r,n){"use strict";n.r(r);var t=n(14),s=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("div",{pre:!0},[r("p",[e._v("https://habr.com/ru/post/501652/")]),e._v(" "),r("h1",{pre:!0,attrs:{id:"nuxt-as-fullstack-server-frontend-backend-api-server-часть-1"}},[r("a",{pre:!0,attrs:{class:"header-anchor",href:"#nuxt-as-fullstack-server-frontend-backend-api-server-часть-1"}},[e._v("#")]),e._v(" Nuxt as fullstack server: frontend + backend API Server (Часть 1)")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Часть 1: Nuxt as fullstack server: frontend + backend API Server")])]),e._v(" "),r("li",[r("a",{pre:!0,attrs:{href:"https://habr.com/ru/post/501688/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Часть 2: Additional SSR performance with Nuxt fullstack server"),r("OutboundLink",{pre:!0})],1)])]),e._v(" "),r("p",[e._v("Разработчики "),r("strong",[e._v("Nuxt")]),e._v(" предлагают 3 метода доступа к API:")]),e._v(" "),r("ol",[r("li",[e._v("Встроенный в "),r("strong",[e._v("Nuxt")]),e._v(" сервер "),r("a",{pre:!0,attrs:{href:"https://github.com/senchalabs/connect",target:"_blank",rel:"noopener noreferrer"}},[e._v("Connect"),r("OutboundLink",{pre:!0})],1),e._v(" и использование "),r("a",{pre:!0,attrs:{href:"https://nuxtjs.org/api/configuration-servermiddleware/",target:"_blank",rel:"noopener noreferrer"}},[e._v("serverMiddleware"),r("OutboundLink",{pre:!0})],1)]),e._v(" "),r("li",[r("a",{pre:!0,attrs:{href:"https://nuxtjs.org/guide/installation#using-code-create-nuxt-app-code-",target:"_blank",rel:"noopener noreferrer"}},[e._v("Интегрированные фреймворки"),r("OutboundLink",{pre:!0})],1),e._v(" ("),r("strong",[e._v("Express, Koa, Hapi")]),e._v(" и т.д.)")]),e._v(" "),r("li",[e._v("Внешние API сервера")])]),e._v(" "),r("p",[e._v("Я покажу на простом примере как организовать API сервер с использованием "),r("strong",[e._v("serverMiddleware")]),e._v(" на том же инстансе "),r("strong",[e._v("Nuxt")]),e._v(", который у нас отвечает за frontend.")]),e._v(" "),r("p",[e._v("Какие преимущества даёт этот подход:")]),e._v(" "),r("ul",[r("li",[e._v("Быстрый старт и минимизация стека технологий, нужен только "),r("strong",[e._v("Nuxt")]),e._v(", который будет "),r("strong",[e._v("fullstack server")]),e._v(": рендерить "),r("strong",[e._v("frontend")]),e._v(" странички и выступать в роли "),r("strong",[e._v("backend API сервера")])]),e._v(" "),r("li",[e._v("Минимизация архитектуры, необходим только 1 инстанс "),r("strong",[e._v("Node")]),e._v(" на котором работает "),r("strong",[e._v("Nuxt")]),e._v(", для полноценного приложения нет необходимости разворачивать, поддерживать и администрировать множество промежуточных архитектурных звеньев ("),r("strong",[e._v("Nginx, php")]),e._v(" и т.д.). Для полноценного веб-приложения минимально необходим "),r("strong",[e._v("Nuxt")]),e._v(" и какая-либо база данных ("),r("strong",[e._v("MySQL, PostgreSQL, MongoDB")]),e._v(" и т.д.)")]),e._v(" "),r("li",[e._v("И серверный, и клиентский код может быть написан на одном языке. Кода меньше и вся логика, серверная и клиентская хранится в одном месте, и в одном репозитарии.")]),e._v(" "),r("li",[e._v("Встроенный в "),r("strong",[e._v("Nuxt")]),e._v(" сервер "),r("strong",[e._v("Connect")]),e._v(", один из самых быстрых "),r("strong",[e._v("Node")]),e._v(" серверов ("),r("a",{pre:!0,attrs:{href:"https://github.com/fastify/benchmarks#benchmarks",target:"_blank",rel:"noopener noreferrer"}},[e._v("ссылка"),r("OutboundLink",{pre:!0})],1),e._v(") может обрабатывать более 55 тысяч запросов в секунду. В случае если понадобится расширенный функционал, то всегда можно подключить к "),r("strong",[e._v("Nuxt")]),e._v("'у более полнофункциональные интегрированные фремворки ("),r("strong",[e._v("Express, Koa, Hapi")]),e._v(" и т.д.) или расширить функционал пакетами.")]),e._v(" "),r("li",[e._v("Несмотря на минимализм, мы имеем полную свободу в масштабировании нашего приложения, легко можно развернуть несколько "),r("strong",[e._v("fullstack Nuxt серверов")]),e._v(", которые взаимодействуют с одной базой данных, плюс развернуть "),r("strong",[e._v("nginx")]),e._v(", для балансировки нагрузки между несколькими "),r("strong",[e._v("fullstack Nuxt серверами")]),e._v(". Также с небольшими доработками каждый инстанс "),r("strong",[e._v("Nuxt")]),e._v("'а может выступать в роли только API сервера (only backend server), так и только фронтэнд сервера (only frontend server).")]),e._v(" "),r("li",[r("strong",[e._v("И огромный бонус!!!")]),e._v(" При использовании одного инстанса для "),r("strong",[e._v("frontend")]),e._v("'а и "),r("strong",[e._v("backend")]),e._v("'а можно существенно ускорить серверный рендеринг страниц ("),r("strong",[e._v("SSR")]),e._v("), об этом расскажу в "),r("strong",[e._v("Части 2")])])]),e._v(" "),r("p",[e._v("Итак, приступим.")]),e._v(" "),r("h2",{pre:!0,attrs:{id:"часть-1-nuxt-as-api-server"}},[r("a",{pre:!0,attrs:{class:"header-anchor",href:"#часть-1-nuxt-as-api-server"}},[e._v("#")]),e._v(" Часть 1: Nuxt as API Server")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Создадим папку "),r("strong",[e._v("/api/")]),e._v(" в корне нашего проекта, тут будут лежать контроллеры нашего API которые будут возвращать данные")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("API Server")]),e._v(" для обработки внешних клиентских запросов:")]),e._v(" "),r("p",[e._v("/serverMiddleware/api-server.js")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('export default async (req, res, next) => {\n  let url = req._parsedUrl.pathname.replace(/^\\/+|\\/+$|\\.+/g, "");\n  url = url.split("/");\n  let method = url.pop();\n  let controller = url.slice(1).join("/");\n  let api = require("../api/" + controller);\n  let result = await api[method](req.params);\n  res.end(JSON.stringify(result));\n};\n')])])])]),e._v(" "),r("li",[r("p",[e._v("Подключим наш "),r("strong",[e._v("API Server")]),e._v(" к "),r("strong",[e._v("Nuxt")]),e._v(" через "),r("strong",[e._v("serverMiddleware")])]),e._v(" "),r("p",[e._v("/nuxt.config.js")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('  serverMiddleware: [\n    { path: "/api", handler: require("body-parser").json() },\n    {\n      path: "/api",\n      handler: (req, res, next) => {\n        const url = require("url");\n        req.query = url.parse(req.url, true).query;\n        req.params = { ...req.query, ...req.body };\n        next();\n      }\n    },\n    { path: "/api", handler: "~/serverMiddleware/api-server.js" }\n  ],\n')])])]),r("p",[e._v("Теперь все запросы вида http://<server_name>/api/controller_name/method_name будут искать в папке "),r("strong",[e._v("/api/")]),e._v(" файл "),r("strong",[e._v("controller_name.js")]),e._v(", который экспортирует функцию с именем "),r("strong",[e._v("method_name")]),e._v(" и запускать её с параметрами первым аргументом")])]),e._v(" "),r("li",[r("p",[e._v("Создадим контроллер "),r("strong",[e._v("users")])]),e._v(" "),r("p",[e._v("/api/users.js")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('// we can get data from any DB\nasync function getDataFromDB() {\n  return (await require("axios").get(`https://reqres.in/api/users?page=1`))\n    .data;\n}\n\nasync function index() {\n  let res = await getDataFromDB();\n\n  // some business logic\n  let ret = res.data.map(el => {\n    return {\n      id: el.id,\n      full_name: el.first_name + " " + el.last_name,\n      highlight: el.first_name.charAt(0) === "J"\n    };\n  });\n  ret = ret.sort(() => 0.5 - Math.random());\n\n  return ret;\n}\n\nexport { index };\n')])])]),r("p",[e._v("Сейчас можем посмотреть, что получилось")]),e._v(" "),r("p",[r("a",{pre:!0,attrs:{href:"https://3gzhl.sse.codesandbox.io/api/users/index",target:"_blank",rel:"noopener noreferrer"}},[e._v("3gzhl.sse.codesandbox.io/api/users/index"),r("OutboundLink",{pre:!0})],1)]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('[\n  {\n    "id": 3,\n    "full_name": "Emma Wong",\n    "highlight": false\n  },\n  {\n    "id": 5,\n    "full_name": "Charles Morris",\n    "highlight": false\n  },\n  {\n    "id": 1,\n    "full_name": "George Bluth",\n    "highlight": false\n  },\n  {\n    "id": 2,\n    "full_name": "Janet Weaver",\n    "highlight": true\n  },\n  {\n    "id": 4,\n    "full_name": "Eve Holt",\n    "highlight": false\n  },\n  {\n    "id": 6,\n    "full_name": "Tracey Ramos",\n    "highlight": false\n  }\n]\n')])])])]),e._v(" "),r("li",[r("p",[e._v("Теперь на странице "),r("strong",[e._v("index.vue")]),e._v(" выведем результаты API")]),e._v(" "),r("p",[e._v("/pages/index.vue")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('<template>\n  <div>\n    <h1 class="title">NUXT as API Server</h1>\n    <h2 class="subtitle">Users</h2>\n    <button type="button" @click="$fetch">Refresh</button>\n    <ol>\n      <li\n        v-for="user in users"\n        :class="{\'highlight\': user.highlight}"\n        :key="user.id"\n      >{{ user.full_name }}</li>\n    </ol>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      users: []\n    };\n  },\n  async fetch() {\n    try {\n      this.users = await this.$axios.$get("/api/users/index");\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n};\n<\/script>\n\n<style scoped>\n.highlight {\n  color: green;\n  font-weight: bold;\n}\n</style>\n')])])]),r("p",[e._v("Вот результат — "),r("a",{pre:!0,attrs:{href:"https://3gzhl.sse.codesandbox.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("3gzhl.sse.codesandbox.io"),r("OutboundLink",{pre:!0})],1)]),e._v(" "),r("p",[r("img",{pre:!0,attrs:{src:"https://habrastorage.org/r/w1560/webt/wl/hb/np/wlhbnpm7hou1gmg6pwqxo8b26vq.png",alt:""}})]),e._v(" "),r("p",[e._v("функция "),r("strong",[e._v("fetch")]),e._v(" отрабатывает при серверном рендеренге, запрашивает по "),r("strong",[e._v("HTTP данные")]),e._v(" (https://3gzhl.sse.codesandbox.io/api/users/index), снова попадает на наш же сервер в API и сервер отдаёт результат "),r("strong",[e._v("json")]),e._v(", который принимается и парсится.")]),e._v(" "),r("p",[e._v("Если же мы нажмём кнопку "),r("strong",[e._v("Refresh")]),e._v(", то браузер опять запросит данные через "),r("strong",[e._v("http")]),e._v(" у нашего API сервера и обновит список.")])]),e._v(" "),r("li",[r("p",[e._v("Давайте добавим немного функционала:")]),e._v(" "),r("p",[e._v("Создадим новый метод API для получения информации по "),r("strong",[e._v("users")]),e._v(" (/api/users.js)")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v("...\nasync function show({ id }) {\n  let res = await getDataFromDB();\n\n  return res.data.filter(el => el.id == id)[0];\n}\n\nexport { index, show };\n")])])]),r("p",[e._v("При клике на users отобразим эту информацию")]),e._v(" "),r("p",[e._v("/pages/index.vue")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('<template>\n  <div>\n    <h1 class="title">NUXT as API Server</h1>\n    <h2 class="subtitle">Users</h2>\n    <button type="button" @click="$fetch">Refresh</button>\n    <ol>\n      <li\n        v-for="user in users"\n        :class="{\'highlight\': user.highlight}"\n        :key="user.id"\n        @click="getUserInfo(user.id)"\n      >{{ user.full_name }}</li>\n    </ol>\n    <div v-if="userInfo">\n      <hr>\n      <h3>{{ userInfo.first_name }} {{ userInfo.last_name }}</h3>\n      <div>Email: {{ userInfo.email }}</div>\n      <img :src="userInfo.avatar" alt="avatar">\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      users: [],\n      userInfo: null\n    };\n  },\n  async fetch() {\n    try {\n      this.users = await this.$axios.$get("/api/users/index");\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  },\n  methods: {\n    async getUserInfo(id) {\n      try {\n        this.userInfo = await this.$axios.$post("/api/users/show", {\n          id: id\n        });\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    }\n  }\n};\n<\/script>\n\n<style scoped>\nli {\n  cursor: pointer;\n}\n.highlight {\n  color: green;\n  font-weight: bold;\n}\n</style>\n')])])]),r("p",[e._v("Теперь при клике по Users, с браузера пользователя по HTTP уходит запрос "),r("a",{pre:!0,attrs:{href:"https://3gzhl.sse.codesandbox.io/api/users/show?id=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("3gzhl.sse.codesandbox.io/api/users/show?id=4"),r("OutboundLink",{pre:!0})],1),e._v(" мы получаем доп данные по клиенту")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"}\n')])])]),r("p",[e._v("и отображаем их")])]),e._v(" "),r("li",[r("p",[e._v("Т.к. мы часто будем пользоваться нашим API, то давайте немного улучшим код. Создадим плагин для использования нашего API")]),e._v(" "),r("p",[e._v("/plugins/api-context.js")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v("export default (context, inject) => {\n    inject('api', async (controller, method, params) => {\n        try {\n            return await context.$axios['$' + (params ? 'post' : 'get')]('/api/' + controller + '/' + method, params);\n        } catch (e) {\n            console.error(e);\n            throw e;\n        }\n    })\n}\n")])])]),r("p",[e._v("Подключим плагин")]),e._v(" "),r("p",[e._v("nuxt.config.js")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('export default {\n  ...\n  plugins: ["~/plugins/api-context.js"]\n}\n')])])]),r("p",[e._v("теперь все вызовы на странице (и в компонентах) можно заменить на простой вызов:")]),e._v(" "),r("p",[e._v("/pages/index.vue")]),e._v(" "),r("div",{pre:!0,attrs:{class:"language- extra-class"}},[r("pre",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[r("code",[e._v('...\n<script>\nexport default {\n  ...\n  async fetch() {\n    this.users = await this.$api("users", "index");\n  },\n  methods: {\n    async getUserInfo(id) {\n      this.userInfo = await this.$api("users", "show", {id: id});\n    }\n  }\n};\n<\/script>\n')])])])])]),e._v(" "),r("h3",{pre:!0,attrs:{id:"итого-часть-1"}},[r("a",{pre:!0,attrs:{class:"header-anchor",href:"#итого-часть-1"}},[e._v("#")]),e._v(" Итого Часть 1")]),e._v(" "),r("p",[e._v("У нас получился "),r("strong",[e._v("Nuxt")]),e._v(" c полноценным API сервером.")]),e._v(" "),r("ul",[r("li",[e._v("контроллеры нашего сервера лежат в папке "),r("strong",[e._v("/api/")])]),e._v(" "),r("li",[e._v("логика обработки запросов API сервером лежит"),r("br"),e._v(" "),r("strong",[e._v("/serverMiddleware/api-server.js")])]),e._v(" "),r("li",[e._v("легко можем расширить функционал "),r("strong",[e._v("API сервера")]),e._v(", добавив новые middleware в "),r("strong",[e._v("/serverMiddleware/")]),e._v(" и подключив их в "),r("strong",[e._v("nuxt.config.js")])])]),e._v(" "),r("p",[e._v("→ Финальную версию данного примера можно посмотреть "),r("a",{pre:!0,attrs:{href:"https://3gzhl.sse.codesandbox.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("здесь"),r("OutboundLink",{pre:!0})],1),r("br"),e._v("\n→ Песочница "),r("a",{pre:!0,attrs:{href:"https://codesandbox.io/s/codesandbox-nuxt-3gzhl",target:"_blank",rel:"noopener noreferrer"}},[e._v("здесь"),r("OutboundLink",{pre:!0})],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);