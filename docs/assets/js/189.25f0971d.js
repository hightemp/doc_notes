(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{465:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Go 1.16 официально еще не вышел, но уже сейчас можно скачать бету с официального сайта и поиграться. Этим и займемся. В этой статье разберем работу нового пакет "),a("code",[t._v("embed")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"_0-устанавливаем-beta-go-1-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-устанавливаем-beta-go-1-16"}},[t._v("#")]),t._v(" #0 устанавливаем beta go 1.16")]),t._v(" "),a("p",[t._v("Если у вас установлен Go, то установка беты происходит максимально просто. В терминале выполняем последовательно следующие команды.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("go get golang.org/dl/go1.16beta1\ngo1.16beta1 download\n")])])]),a("p",[t._v("Вот и все, теперь бета доступна посредством вызова "),a("code",[t._v("go1.16beta1")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"embed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#embed"}},[t._v("#")]),t._v(" embed")]),t._v(" "),a("p",[t._v("Что если мы хотим встроить файл в наш бинарник на go, например, какие-то шаблоны, html файлы, если это веб сервер или даже README.md ? Нам приходилось либо саморучно затаскивать их в наш код, либо пользоваться сторонними библиотечками, такими как "),a("a",{attrs:{href:"https://github.com/go-bindata/go-bindata",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-bindata"),a("OutboundLink")],1),t._v(". Оба варианта отстойные. Первый способ не гибкий, в нем можно ошибиться, так как нужно все делать вручную. Второй способ получше, но это дополнительные зависимости, которых может не оказаться в вашей среде и главное дополнительные шаги при сборке приложения.")]),t._v(" "),a("p",[t._v("Go 1.16 решает нашу проблему директивой "),a("code",[t._v("//go:embed path_pattern")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"условия-использования-директивы"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#условия-использования-директивы"}},[t._v("#")]),t._v(" Условия использования директивы")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("директива должна предшествовать строке, содержащей объявление переменной, в которую будет помещен файл. Между директивой и объявлением переменной допускаются только пустые строки и комментарии")])]),t._v(" "),a("li",[a("p",[t._v("паттерн пути к файлу или директории не должен начинаться с "),a("code",[t._v("/")]),t._v(" и иметь в себе "),a("code",[t._v(".")]),t._v(" или "),a("code",[t._v("..")])])]),t._v(" "),a("li",[a("p",[t._v("паттерн должен соответствовать хотя бы одному файлу или не пустой директории. В противном случае сборка не состоится")])]),t._v(" "),a("li",[a("p",[t._v("симлинки запрещено использовать в паттерне")])]),t._v(" "),a("li",[a("p",[t._v("паттерн может принимать только файлы или директории внутри модуля, но не во вне")])]),t._v(" "),a("li",[a("p",[t._v("чтобы получить все файлы в директории нужно использовать "),a("code",[t._v("*")])])])]),t._v(" "),a("h2",{attrs:{id:"встраиваем-фаил"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#встраиваем-фаил"}},[t._v("#")]),t._v(" Встраиваем файл")]),t._v(" "),a("p",[t._v("Директива "),a("code",[t._v("//go:embed")]),t._v(" позволяет нам встроить файла как строку "),a("code",[t._v("string")]),t._v(", так и как слайс байт "),a("code",[t._v("[]byte")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embed"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed README.md")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" readme "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed bkg.png")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" image "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("В данном примере файлы располагаются следующим образом:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── README.md\n├── bkg.jpeg\n└── main.go\n")])])]),a("p",[t._v("Теперь содержимое файла README.md лежит в перменное "),a("code",[t._v("readme")]),t._v(", а содержимое bkg.png в переменной "),a("code",[t._v("image")]),t._v(". При этом это обычные переменные, которые мы можем менять в ходе выполнения нашей программы.")]),t._v(" "),a("h2",{attrs:{id:"встраиваем-несколько-фаилов-aka-embed-fs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#встраиваем-несколько-фаилов-aka-embed-fs"}},[t._v("#")]),t._v(" Встраиваем несколько файлов aka embed.FS")]),t._v(" "),a("p",[t._v("Мы поняли как встраивать один файл, но что делать, если у нас директория с несколькими html файлами, а еще директория с изображениями. Как нам встроить это все в наш бинарник ?")]),t._v(" "),a("p",[t._v("На этот раз наш пакет будет выглядит так:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── README.md\n├── bkg.jpeg\n├── main.go\n└── www\n    ├── html\n    │   ├── about.html\n    │   └── index.html\n    └── images\n        ├── forest.jpg\n        └── snow_forest.jpg\n")])])]),a("p",[t._v("А код, которые встраивает в себя всю директорию www следующий:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embed"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed README.md")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" readme "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed www")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" www embed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FS\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tentries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www/html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" entries "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("При этом "),a("code",[t._v("embed.FS")]),t._v(" реализует интерфейс "),a("a",{attrs:{href:"https://tip.golang.org/pkg/io/fs/#FS",target:"_blank",rel:"noopener noreferrer"}},[t._v("fs.FS"),a("OutboundLink")],1),t._v(", что очень удобно для абстрагирования в коде откуда на самом деле он читает файлы. Для "),a("code",[t._v("embed.FS")]),t._v(" есть ряд ограничений:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("это строго read-only структура, так что можно свободно передавать ее в горутины")])]),t._v(" "),a("li",[a("p",[t._v("паттерн заканчивающийся на "),a("code",[t._v("/*")]),t._v(" встраивает все файлы даже те, которые начинаются на "),a("code",[t._v(".")]),t._v(" и на "),a("code",[t._v("_")])])])]),t._v(" "),a("h2",{attrs:{id:"пару-слов-напоследок"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#пару-слов-напоследок"}},[t._v("#")]),t._v(" Пару слов напоследок")]),t._v(" "),a("p",[t._v("В конце хочу поделиться еще маленьким нюансом, который заметил. Встраивание двух единичных одинаковых файлов будет честным, то есть, если мы делаем что-то подобное:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed bkg.jpeg")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" image "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//go:embed bkg.jpeg")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" image2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n")])])]),a("p",[t._v("то размер файла увеличится на 2 размера файла bkg.jpeg. При этом для встраивания через "),a("code",[t._v("embed.FS")]),t._v(" это не так.")])])}),[],!1,null,null,null);a.default=e.exports}}]);