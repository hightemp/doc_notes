(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{457:function(t,a,e){"use strict";e.r(a);var r=e(14),o=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("https://habr.com/ru/post/249545/")]),t._v(" "),a("p",[t._v("Несмотря на то, что Go считается одним из самых легких для входа языков, приходится регулярно слышать: «как-то все непонятно, какие-то переменные GOROOT и GOPATH нужно устанавливать». И хотя тема полностью раскрыта на официальном сайте Go, не будет лишним объяснить совсем простым языком.")]),t._v(" "),a("p",[t._v("TL;DR"),a("br"),t._v(" "),a("img",{attrs:{src:"https://habrastorage.org/r/w1560/files/c32/86f/043/c3286f0436884d3c8c687d80ae1f9925.png",alt:""}})]),t._v(" "),a("p",[t._v("Теперь чуть подробнее:")]),t._v(" "),a("h4",{attrs:{id:"goroot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#goroot"}},[t._v("#")]),t._v(" GOROOT")]),t._v(" "),a("p",[a("strong",[t._v("GOROOT")]),t._v(" — это переменная, указывающая, где лежит, собственно, вся бинарная сборка Go и исходные коды. Что-то вроде JAVA_HOME. Устанавливать эту переменную ручками нужно только в тех случаях, если вы ставите Go под Windows не с помощью MSI-инсталлера, а из zip-архива. Ну, или если вы хотите держать несколько версий Go, каждая в своей директории.")]),t._v(" "),a("p",[t._v("Раньше (до Go 1.0) эта переменная была нужна — её использовали скрипты сборки, равно как и GOARCH и GOOS. Но после Go 1.0 немного изменилась внутренняя логика работы go tool и сейчас значение GOROOT хардкодится на этапе сборки или инсталляции. Тоесть, go — дефолтно проинсталлированный — знает это значение и так. Его можно посмотреть с помощью команды:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("go env GOROOT\n")])])]),a("p",[t._v("В MacOS X это /usr/local/go/, в Linux тоже (хотя может зависеть от дистрибутива), в Windows — С:\\Go.")]),t._v(" "),a("h4",{attrs:{id:"gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gopath"}},[t._v("#")]),t._v(" GOPATH")]),t._v(" "),a("p",[t._v("А вот переменная "),a("strong",[t._v("GOPATH")]),t._v(" очень важна и нужна и её нужно установить обязательно, впрочем только один раз. Это ваш workspace, где будет лежать код и бинарные файлы всего с чем вы будете в Go работать. Поэтому выбирайте удобный вам путь и сохраняйте его в GOPATH. К примеру:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export GOPATH=~/go\nexport GOPATH=~/gocode\nexport GOPATH=~/Devel/go\nexport GOPATH=~/Projects/go\n")])])]),a("p",[t._v("Ну и обязательно это сохраните в .profile или как вы там сохраняете переменные:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "export GOPATH=~/go" >> ~/.profile (или .bash_profile)\n')])])]),a("p",[t._v("Всё, сделайте это один раз и забудьте. Создайте только эту директорию, если её еще и нет, и на этом готово. Теперь любой вызов "),a("em",[t._v("go get github.com/someuser/somelib")]),t._v(" автоматически будет скачивать исходники в $GOPATH/src, а бинарный результат компиляции складывать в $GOPATH/pkg или $GOPATH/bin (для библиотек и исполняемых файлов соответственно).")]),t._v(" "),a("h4",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" PATH")]),t._v(" "),a("p",[t._v("Это опционально, но желательно сразу тоже сделать, раз уж вы взялись за настройку среды. Рано или поздно вы захотите пользоваться какими-то Go-программами, которые будут лежать в вашей GOPATH/bin. Чтобы их без лишних телодвижений использовать, добавьте к PATH директорию $GOPATH/bin:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export PATH=$PATH:$GOPATH/bin\n")])])]),a("p",[t._v("Команда "),a("em",[t._v("go install")]),t._v(" собирает и инсталлирует бинарник именно в эту директорию, поэтому это исключительно для удобства.")]),t._v(" "),a("h4",{attrs:{id:"структура-workspace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#структура-workspace"}},[t._v("#")]),t._v(" Структура Workspace")]),t._v(" "),a("p",[t._v("Теперь давайте посмотрим внимательно на структуру директории GOPATH. Возьму пример из официальной документации:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bin/\n    hello                 # программа hello\npkg/\n    linux_amd64/          # каталог этого уровня определяет ось и архитектуру для бинарных файлов\n        github.com/user/\n            stringutil.a  # объектный бинарный файл пакета stringutil\nsrc/\n    github.com/user/\n        hello/\n            hello.go      # исходный код программы hello\n        stringutil/\n            reverse.go    # исходный код библиотеки stringutil\n")])])]),a("p",[t._v("Достаточно просто, не так ли? Важно понимать, что никто не обязывает называть директории в src/ по какому-то формату. Можно использовать и src/test/my_first_app/main.go и src/anyname/main.go — но если вы работаете с системами контроля версий (а вы таки работаете)), то вам это бесспорно станет удобно — утилиты go get/install используют это соглашения наименования, чтобы сделать работу с системами контроля версий безбожно простой.")]),t._v(" "),a("h4",{attrs:{id:"дополнительно"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#дополнительно"}},[t._v("#")]),t._v(" Дополнительно")]),t._v(" "),a("p",[t._v("Переменная GOPATH аналогична стандартной PATH — можно указывать несколько директорий, через ':'. GOPATH=~/go:~/other_workspace. Это в очень редких случаях бывает полезно (например, для работы с внешними менеджерами зависимостей вроде gpm), но в 99% это не нужно, и просто так рекомендуется использовать только одну директорию в GOPATH.")]),t._v(" "),a("p",[t._v("В конце-концов, если вам нужны раздельные workspace-ы, всегда можно заменить переменную GOPATH на нужную (в скрипте сборки, к примеру). Так, собственно, и делают.")]),t._v(" "),a("h4",{attrs:{id:"ссылки"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ссылки"}},[t._v("#")]),t._v(" Ссылки")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang.org/doc/install"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://golang.org/doc/code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang.org/doc/code.html"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"http://dave.cheney.net/2013/06/14/you-dont-need-to-set-goroot-really",target:"_blank",rel:"noopener noreferrer"}},[t._v("dave.cheney.net/2013/06/14/you-dont-need-to-set-goroot-really"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=o.exports}}]);