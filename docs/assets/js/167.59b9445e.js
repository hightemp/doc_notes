(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{439:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"напиши-10-разных-способов-отправки-http-пакета-в-bash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#напиши-10-разных-способов-отправки-http-пакета-в-bash"}},[s._v("#")]),s._v(" напиши 10 разных способов отправки http пакета в bash")]),s._v(" "),t("p",[s._v("Конечно! Вот 10 разных способов отправки HTTP-запросов в Bash:")]),s._v(" "),t("ol",[t("li",[s._v("Используя утилиту curl:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("curl -X GET http://example.com\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("Используя утилиту wget:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("wget http://example.com\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("Используя утилиту httpie:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("http GET http://example.com\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("Используя утилиту netcat:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('echo -e "GET / HTTP/1.1\\nHost: example.com\\n\\n" | nc example.com 80\n')])])]),t("ol",{attrs:{start:"5"}},[t("li",[s._v("Используя утилиту telnet:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("telnet example.com 80\nGET / HTTP/1.1\nHost: example.com\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[s._v("Используя утилиту socat:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('echo "GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n" | socat - TCP4:example.com:80\n')])])]),t("ol",{attrs:{start:"7"}},[t("li",[s._v("Используя утилиту openssl:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("openssl s_client -quiet -connect example.com:443 <<EOF\nGET / HTTP/1.1\nHost: example.com\n\nEOF\n")])])]),t("ol",{attrs:{start:"8"}},[t("li",[s._v("Используя утилиту nmap:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("nmap --script http-methods -p 80 example.com\n")])])]),t("ol",{attrs:{start:"9"}},[t("li",[s._v("Используя утилиту lynx:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("lynx -dump http://example.com\n")])])]),t("ol",{attrs:{start:"10"}},[t("li",[s._v("Используя утилиту links:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("links -dump http://example.com\n")])])]),t("h2",{attrs:{id:"напиши-как-отправить-http-пакет-через-sockets-в-bash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#напиши-как-отправить-http-пакет-через-sockets-в-bash"}},[s._v("#")]),s._v(" напиши как отправить http пакет через sockets в bash")]),s._v(" "),t("p",[s._v("Конечно, вот пример кода на Bash для отправки HTTP-запроса через сокеты:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Устанавливаем переменные")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example.com"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("request")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET / HTTP/1.1'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("Host: example.com"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Создаем сокет и отправляем запрос")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<>")]),s._v("/dev/tcp/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$host")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$port")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Читаем ответ от сервера")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Закрываем сокет")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">&")]),s._v("-\n")])])]),t("p",[s._v("В этом примере мы используем встроенную возможность Bash для работы с сокетами. Сначала мы устанавливаем переменные для хоста, порта и запроса. Затем мы создаем сокет и отправляем запрос на сервер. После этого мы читаем ответ от сервера и закрываем сокет.")]),s._v(" "),t("p",[s._v("Важно отметить, что этот пример отправляет только GET-запросы. Если вам нужно отправить POST-запросы или запросы с другими методами, вам понадобится изменить соответствующую строку запроса.")]),s._v(" "),t("p",[s._v("Также обратите внимание, что этот пример не обрабатывает ошибки и не проверяет ответ сервера на наличие ошибок. Поэтому, если вы используете этот код в своих проектах, обязательно добавьте обработку ошибок и проверку ответа сервера.")]),s._v(" "),t("h2",{attrs:{id:"напиши-как-в-bash-обрабатываются-ошибки"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#напиши-как-в-bash-обрабатываются-ошибки"}},[s._v("#")]),s._v(" напиши как в bash обрабатываются ошибки")]),s._v(" "),t("p",[s._v("В Bash обработка ошибок может быть выполнена с помощью команды "),t("code",[s._v("trap")]),s._v(", которая позволяет определить действия, которые должны быть выполнены при возникновении определенного сигнала или ошибки.")]),s._v(" "),t("p",[s._v("Пример:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработка ошибок")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработчик ошибок")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("error_handler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Произошла ошибка на строке '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Установка обработчика ошибок")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'error_handler $LINENO'")]),s._v(" ERR\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Выполнение команд")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Начало скрипта"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Здесь может произойти ошибка")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /file/that/does/not/exist\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Конец скрипта"')]),s._v("\n")])])]),t("p",[s._v("В этом примере мы используем команду "),t("code",[s._v("set -e")]),s._v(", которая заставляет скрипт прерваться, если произошла ошибка. Затем мы определяем функцию "),t("code",[s._v("error_handler")]),s._v(", которая будет вызвана в случае ошибки. Мы также используем команду "),t("code",[s._v("trap")]),s._v(", чтобы связать обработчик ошибок с событием ошибки.")]),s._v(" "),t("p",[s._v("Если в скрипте произойдет ошибка, обработчик ошибок будет вызван, и скрипт завершится с кодом ошибки 1. В обработчике ошибок мы можем выполнять любые действия, которые необходимы для обработки ошибки, например, отправлять сообщения об ошибке или записывать ошибки в файл.")]),s._v(" "),t("p",[s._v("Это только один из способов обработки ошибок в Bash. Существуют и другие методы, например, использование конструкции "),t("code",[s._v("if")]),s._v(" для проверки наличия ошибок после выполнения каждой команды.")]),s._v(" "),t("h2",{attrs:{id:"напиши-примеры-перехватов-term-kill-и-т-д-в-bash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#напиши-примеры-перехватов-term-kill-и-т-д-в-bash"}},[s._v("#")]),s._v(" напиши примеры перехватов (TERM, KILL и т.д.)в bash")]),s._v(" "),t("p",[s._v("В Bash существует несколько сигналов, которые могут быть перехвачены. Некоторые из них включают в себя:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("SIGHUP")]),s._v(": сигнал, отправляемый приложению при завершении сеанса SSH.")]),s._v(" "),t("li",[t("code",[s._v("SIGINT")]),s._v(": сигнал, отправляемый приложению при нажатии комбинации клавиш "),t("code",[s._v("Ctrl+C")]),s._v(".")]),s._v(" "),t("li",[t("code",[s._v("SIGTERM")]),s._v(": сигнал, отправляемый приложению при вызове команды "),t("code",[s._v("kill")]),s._v(".")]),s._v(" "),t("li",[t("code",[s._v("SIGKILL")]),s._v(": сигнал, отправляемый приложению для немедленного завершения.")])]),s._v(" "),t("p",[s._v("Вот примеры того, как можно обработать эти сигналы в Bash:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработка сигнала SIGHUP")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo 'Получен сигнал SIGHUP'\"")]),s._v(" SIGHUP\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработка сигнала SIGINT")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo 'Получен сигнал SIGINT'\"")]),s._v(" SIGINT\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработка сигнала SIGTERM")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo 'Получен сигнал SIGTERM'\"")]),s._v(" SIGTERM\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Обработка сигнала SIGKILL (невозможно обработать)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo 'Невозможно обработать сигнал SIGKILL'\"")]),s._v(" SIGKILL\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Бесконечный цикл")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("Этот скрипт перехватывает сигналы SIGHUP, SIGINT и SIGTERM, но не может обработать сигнал SIGKILL, так как он немедленно завершает процесс без возможности его обработки.")]),s._v(" "),t("h2",{attrs:{id:"как-посчитать-количество-строк-кода-php"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#как-посчитать-количество-строк-кода-php"}},[s._v("#")]),s._v(" Как посчитать количество строк кода php")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" ./module/ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.php'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-print0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("309127")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);