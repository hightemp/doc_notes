(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{370:function(t,e,r){"use strict";r.r(e);var o=r(14),n=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("http://linux-ip.net/html/tools-ip-route.html")]),t._v(" "),e("p",[t._v("Д.2. "),e("strong",[t._v("IP-маршрут")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Пред."),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Приложение D. Управление IP-маршрутом")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-rule.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Следующий"),e("OutboundLink")],1)]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"д-2-ip-маршрут"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-ip-маршрут"}},[t._v("#")]),t._v(" Д.2. "),e("strong",[t._v("IP-маршрут")])]),t._v(" "),e("p",[t._v("Еще одна часть набора инструментов "),e("strong",[t._v("iproute2 для управления IP,")]),t._v(" "),e("strong",[t._v("ip route")]),t._v(" предоставляет инструменты управления для манипулирования любой из таблиц маршрутизации. Операции включают "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show",title:"Д.2.1.  Отображение таблицы маршрутизации с ip route show",target:"_blank",rel:"noopener noreferrer"}},[t._v("отображение маршрутов"),e("OutboundLink")],1),t._v(" или "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show-cache",title:"Г.2.2.  Отображение кеша маршрутизации с ip route show cache",target:"_blank",rel:"noopener noreferrer"}},[t._v("кэша маршрутизации"),e("OutboundLink")],1),t._v(" , "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-add",title:"Д.2.3.  Использование ip route add для заполнения таблицы маршрутизации",target:"_blank",rel:"noopener noreferrer"}},[t._v("добавление маршрутов"),e("OutboundLink")],1),t._v(" , "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-del",title:"Д.2.6.  Удаление маршрутов с помощью ip route del",target:"_blank",rel:"noopener noreferrer"}},[t._v("удаление маршрутов"),e("OutboundLink")],1),t._v(" , "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-change",title:"Д.2.7.  Изменение существующих маршрутов с изменением IP-маршрута",target:"_blank",rel:"noopener noreferrer"}},[t._v("изменение существующих маршрутов"),e("OutboundLink")],1),t._v(" , "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-get",title:"Д.2.8.  Программное получение информации о маршруте с помощью ip route get",target:"_blank",rel:"noopener noreferrer"}},[t._v("выборку маршрута"),e("OutboundLink")],1),t._v(" и "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-flush",title:"Д.2.9.  Очистка таблиц маршрутизации с помощью ip route flush",target:"_blank",rel:"noopener noreferrer"}},[t._v("очистку всей таблицы маршрутизации или кэша маршрутизации"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("При использовании ip route")]),t._v(" следует помнить, что с помощью этой команды вы можете работать с любой из 255 таблиц маршрутизации. Там, где команда "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html",title:"Д.1.  маршрут",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("route")]),e("OutboundLink")],1),t._v(" работала только с основной таблицей маршрутизации (таблица 254), команда "),e("strong",[t._v("ip route")]),t._v(" работает по умолчанию с основной таблицей маршрутизации, но ее можно легко заставить использовать другие таблицы с параметром "),e("code",[t._v("table")]),t._v(".")]),t._v(" "),e("p",[t._v("К счастью, как упоминалось ранее, набор инструментов "),e("strong",[t._v("iproute2")]),t._v(" не использует DNS для каких-либо операций, поэтому вездесущий "),e("code",[t._v("-n")]),t._v("переключатель из предыдущих примеров не потребуется ни в одном из примеров.")]),t._v(" "),e("p",[t._v("Все операции с командой "),e("strong",[t._v("ip route")]),t._v(" атомарны, поэтому каждая команда вернет либо "),e("code",[t._v("RTNETLINK answers: No such process")]),t._v("в случае ошибки, либо ничего в случае успеха. Коммутатор "),e("code",[t._v("-s")]),t._v(", который предоставляет дополнительную статистическую информацию при сообщении информации об уровне канала, будет предоставлять дополнительную информацию только при сообщении о состоянии кэша "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show-cache",title:"Г.2.2.  Отображение кеша маршрутизации с ip route show cache",target:"_blank",rel:"noopener noreferrer"}},[t._v("маршрутизации"),e("OutboundLink")],1),t._v(" или "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-get",title:"Д.2.8.  Программное получение информации о маршруте с помощью ip route get",target:"_blank",rel:"noopener noreferrer"}},[t._v("выборке определенного маршрута"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[t._v("Утилита "),e("strong",[t._v("ip route")]),t._v(" при использовании в сочетании с утилитой "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-rule.html",title:"Д.3.  IP-правило",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip rule")]),e("OutboundLink")],1),t._v(" может создавать таблицы NAT без сохранения состояния. Он может даже манипулировать локальной таблицей маршрутизации, таблицей маршрутизации, используемой для трафика, привязанного к широковещательным адресам и IP-адресам, размещенным на самой машине.")]),t._v(" "),e("p",[t._v("Чтобы понять контекст, в котором работает этот инструмент, вам необходимо понять некоторые основы IP-маршрутизации, поэтому, если вы прочитали приведенное выше введение в инструмент ip route "),e("strong",[t._v("и")]),t._v(" запутались, вы можете прочитать "),e("a",{attrs:{href:"http://linux-ip.net/html/ch-routing.html",title:"Глава 4. IP-маршрутизация",target:"_blank",rel:"noopener noreferrer"}},[t._v("главу 4, "),e("em",[t._v("IP-маршрутизация")]),e("OutboundLink")],1),t._v(" и ознакомьтесь с некоторыми концепциями IP-маршрутизации (в Linux), прежде чем продолжить.")]),t._v(" "),e("h3",{attrs:{id:"д-2-1-отображение-таблицы-маршрутизации-с-ip-route-show"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-1-отображение-таблицы-маршрутизации-с-ip-route-show"}},[t._v("#")]),t._v(" Д.2.1. Отображение таблицы маршрутизации с "),e("strong",[t._v("ip route show")])]),t._v(" "),e("p",[t._v("В простейшей форме "),e("strong",[t._v("ip route")]),t._v(" можно использовать для отображения выходных данных основной таблицы маршрутизации. Вывод этой команды существенно отличается от вывода "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html#tools-route-show",title:"Д.1.1.  Отображение таблицы маршрутизации с маршрутом",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("route")]),e("OutboundLink")],1),t._v(" . Для сравнения давайте посмотрим на вывод как "),e("strong",[t._v("route -n")]),t._v(" , так и "),e("strong",[t._v("ip route show")]),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.11. Просмотр основной таблицы маршрутизации с ip route show")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("Если вы привыкли к формату вывода "),e("strong",[t._v("маршрута")]),t._v(" , вывод "),e("strong",[t._v("ip route")]),t._v(" может показаться кратким. Однако отображается та же основная информация. Как и в нашем предыдущем примере, давайте на данный момент проигнорируем петлевой маршрут 127.0.0.0/8. Это обязательный маршрут для любых IP-адресов, размещенных на петлевом интерфейсе. Нас гораздо больше интересуют два других маршрута.")]),t._v(" "),e("p",[t._v("Сеть 192.168.99.0/24 доступна на eth0 с областью ссылки, что означает, что сеть действительна и доступна через это устройство (eth0). Обратитесь к "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-address.html#tb-tools-ip-addr-scope",title:"Таблица С.2.  Область IP по IP-адресу",target:"_blank",rel:"noopener noreferrer"}},[t._v("Таблице C.2, «Область IP по IP-адресу »"),e("OutboundLink")],1),t._v(" для определения возможных областей. Пока связь на этом устройстве остается хорошей, мы сможем получить доступ к любому IP-адресу внутри 192.168.99.0/24 через интерфейс eth0.")]),t._v(" "),e("p",[t._v("Наконец, наш самый важный маршрут по умолчанию выражается в таблице маршрутизации словом default. Обратите внимание, что любой пункт назначения, доступный через шлюз, отображается в выходных данных таблицы маршрутизации с ключевым словом "),e("code",[t._v("via")]),t._v(". Эта последняя строка семантически совпадает с последней строкой вывода "),e("strong",[t._v("маршрута -n")]),t._v(" выше.")]),t._v(" "),e("p",[t._v("Теперь давайте посмотрим на локальную таблицу маршрутизации, которую мы не можем увидеть с помощью "),e("strong",[t._v("route")]),t._v(" . Честно говоря, обычно совершенно необязательно просматривать и/или манипулировать локальной таблицей маршрутизации, поэтому "),e("strong",[t._v("route")]),t._v(" не предоставляет доступа к этой информации.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.12. Просмотр локальной таблицы маршрутизации с помощью ip route show table local")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("Это дает нам большой объем информации об IP-сетях, к которым машина напрямую подключена, и позволяет взглянуть изнутри на то, как таблицы маршрутизации обрабатывают специальные адреса, такие как широковещательные адреса и локально сконфигурированные адреса.")]),t._v(" "),e("p",[t._v("Первое поле в этом выводе сообщает нам, предназначен ли маршрут для широковещательного адреса или IP-адреса или диапазона, локально размещенного на этой машине. Последующие поля сообщают нам, через какое устройство достижим пункт назначения, и особенно (в этой таблице) о том, что ядро ​​добавило эти маршруты как часть создания интерфейсов уровня IP.")]),t._v(" "),e("p",[t._v("Для каждого IP-адреса, размещенного на машине, имеет смысл, что машина должна ограничивать доступ к этому IP-адресу или диапазону IP-адресов только для себя. Это объясняет, почему в "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ex-tools-ip-route-show-local",title:"Пример Г.12.  Просмотр локальной таблицы маршрутизации с помощью ip route show table local",target:"_blank",rel:"noopener noreferrer"}},[t._v("примере D.12, «Просмотр локальной таблицы маршрутизации с помощью ip route show table local »"),e("OutboundLink")],1),t._v(" , 192.168.99.35 имеет область хоста. Поскольку "),e("code",[t._v("tristan")]),t._v("этот IP-адрес хоста, нет причин для маршрутизации пакета. Точно так же нет необходимости перенаправлять адресата localhost (127.0.0.1) с этой машины. В каждом из этих случаев область действия была установлена ​​на host.")]),t._v(" "),e("p",[t._v("Для широковещательных адресов, которые предназначены для любых слушателей, которые совместно используют IP-сеть, пункт назначения имеет смысл только для набора устройств, подключенных к одному и тому же канальному уровню "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855371744",target:"_blank",rel:"noopener noreferrer"}},[t._v("[49]"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[t._v("Последней характеристикой, доступной нам в каждой строке вывода локальной таблицы маршрутизации, является "),e("code",[t._v("src")]),t._v("ключевое слово. Это рассматривается как подсказка ядру о том, какой IP-адрес выбрать в качестве исходного адреса для исходящих пакетов на этом интерфейсе. Естественно, это чаще всего используется (и злоупотребляется) на многосетевых хостах, хотя почти каждая машина использует эту подсказку для соединений с локальным хостом "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855369408",target:"_blank",rel:"noopener noreferrer"}},[t._v("[50]"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[t._v("Теперь, когда мы изучили основную таблицу маршрутизации и локальную таблицу маршрутизации, давайте посмотрим, насколько легко можно просмотреть любую из других таблиц маршрутизации. Это так же просто, как указать таблицу по имени "),e("code",[t._v("/etc/iproute2/rt_tables")]),t._v("или по номеру. В этом файле есть несколько зарезервированных идентификаторов таблиц, но другие номера таблиц от 1 до 252 доступны для пользователя. Обратите внимание, что этот пример предназначен только для демонстрации и не имеет внутренней ценности, кроме демонстрации использования параметра "),e("code",[t._v("table")]),t._v(".")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.13. Просмотр таблицы маршрутизации с ip route show table")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("В приведенном выше примере вы впервые видите, как добавить маршрут в таблицу, отличную от основной таблицы маршрутизации, но что нас действительно интересует, так это окончательная команда и вывод. В "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ex-tools-ip-route-show-table",title:"Пример Г.13.  Просмотр таблицы маршрутизации с ip route show table",target:"_blank",rel:"noopener noreferrer"}},[t._v("Примере D.13 «Просмотр таблицы маршрутизации с помощью таблицы ip route show »"),e("OutboundLink")],1),t._v(" мы идентифицировали таблицу 7 по имени «специальная» и добавили маршрут в эту таблицу. Команда **"),e("code",[t._v("ip route show table special")]),t._v("**показывает нам таблицу маршрутизации номер 7 из ядра.")]),t._v(" "),e("p",[e("strong",[t._v("ip route")]),t._v(" консультируется "),e("code",[t._v("/etc/iproute2/rt_tables")]),t._v("для идентификатора таблицы. Если он не находит идентификатора, он жалуется, что не может найти ссылку на такую ​​таблицу. Если идентификатор таблицы найден, отображается соответствующая таблица маршрутизации.")]),t._v(" "),e("p",[t._v("Использование нескольких таблиц маршрутизации может очень быстро сделать маршрутизатор очень сложным. Использование имен вместо номеров для этих таблиц может помочь справиться с этой сложностью. Для дальнейшего обсуждения управления несколькими таблицами маршрутизации и некоторых вопросов их обработки см. "),e("a",{attrs:{href:"http://linux-ip.net/html/adv-rpdb.html",title:"10.3.  Использование базы данных политик маршрутизации и нескольких таблиц маршрутизации",target:"_blank",rel:"noopener noreferrer"}},[t._v("Раздел 10.3, «Использование базы данных политик маршрутизации и нескольких таблиц маршрутизации»"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("h3",{attrs:{id:"г-2-2-отображение-кеша-маршрутизации-с-ip-route-show-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#г-2-2-отображение-кеша-маршрутизации-с-ip-route-show-cache"}},[t._v("#")]),t._v(" Г.2.2. Отображение кеша маршрутизации с "),e("strong",[t._v("ip route show cache")])]),t._v(" "),e("p",[t._v("Кэш маршрутизации используется ядром в качестве таблицы поиска, аналогичной карточке быстрого справочника. Ядру быстрее обратиться к кешу (внутренне реализованному в виде хеш-таблицы) для недавно использованного маршрута, чем снова искать адрес назначения. Маршруты, существующие в кэше маршрутов, периодически устаревают.")]),t._v(" "),e("p",[t._v("Кэш маршрутизации можно отобразить во всей красе с помощью "),e("strong",[t._v("ip route show cache")]),t._v(" , который обеспечивает подробное представление последних IP-адресов пунктов назначения и основных характеристик этих пунктов назначения. На маршрутизаторах, маскирующихся под бокс и брандмауэры, кэш маршрутизации может стать очень большим. Вместо просмотра всего кеша маршрутизации даже на рабочей станции мы выберем конкретное место назначения из кеша маршрутизации для проверки.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.14. Отображение кеша маршрутизации с ip route show cache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("ИСПРАВИТЬ МЕНЯ! Я не знаю, как объяснить rtt, rttvar и cwnd, даже прочитав комментарии Алексея в документации iproute2! Мало того, я не уверен, почему есть две записи!")]),t._v(" "),e("p",[t._v("Выходные данные в "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ex-tools-ip-route-show-cache",title:"Пример Г.14.  Отображение кеша маршрутизации с ip route show cache",target:"_blank",rel:"noopener noreferrer"}},[t._v("примере D.14, «Отображение кэша маршрутизации с помощью кэша показа маршрута ip »"),e("OutboundLink")],1),t._v(" , резюмируют доступность пункта назначения 192.168.100.17 из 192.168.99.35. Первая строка каждой записи предоставляет важную для нас информацию: IP-адрес назначения, IP-адрес источника, шлюз, через который доступен пункт назначения, и интерфейс, через который маршрутизировались пакеты. Вместе эти данные идентифицируют запись маршрута в кэше.")]),t._v(" "),e("p",[t._v("Характеристики этого маршрута приведены во второй строке каждой записи. Для маршрута между "),e("code",[t._v("tristan")]),t._v("и "),e("code",[t._v("isolde")]),t._v("мы видим, что обнаружение Path MTU определило 1500 байт как максимальный размер пакета из конца в конец. Максимальный размер сегмента (MSS) данных составляет 1460 байт. Хотя обычно это представляет не какой-либо, а самый случайный интерес, это может быть полезной диагностической информацией.")]),t._v(" "),e("p",[t._v("Если вы ярый поклонник статистики и не можете получить достаточно информации о маршрутизации на вашем компьютере, вы всегда можете переключиться "),e("code",[t._v("-s")]),t._v(".")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.15. Отображение статистики из кэша маршрутизации с помощью ip -s route show cache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("С этим выводом вы получите немного больше информации о маршрутах. Наиболее интересными данными обычно является поле «используется», которое указывает количество обращений к этому маршруту в кэше маршрутизации. Это может дать вам очень хорошее представление о том, сколько раз использовался конкретный маршрут. Поле age используется ядром, чтобы решить, когда истечет срок действия записи в кэше. Возраст сбрасывается каждый раз при доступе к маршруту "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855328128",target:"_blank",rel:"noopener noreferrer"}},[t._v("[51]"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[t._v("Таким образом, вы можете использовать кеш маршрутизации, чтобы узнать многое об удаленных IP-адресах и некоторых характеристиках сетевого пути к этим адресатам.")]),t._v(" "),e("h3",{attrs:{id:"д-2-3-использование-ip-route-add-для-заполнения-таблицы-маршрутизации"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-3-использование-ip-route-add-для-заполнения-таблицы-маршрутизации"}},[t._v("#")]),t._v(" Д.2.3. Использование "),e("strong",[t._v("ip route add")]),t._v(" для заполнения таблицы маршрутизации")]),t._v(" "),e("p",[e("strong",[t._v("ip route add")]),t._v(" используется для заполнения таблицы маршрутизации. Хотя вы можете использовать "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html#tools-route-add",title:"Д.1.4.  Создание статического маршрута с добавлением маршрута",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("route add,")]),e("OutboundLink")],1),t._v(" чтобы сделать то же самое, "),e("strong",[t._v("ip route add")]),t._v(" предлагает большое количество опций, которые невозможны с почтенной "),e("strong",[t._v("командой route")]),t._v(" . После того, как мы рассмотрели несколько простых примеров, мы обсудим более сложные маршруты с помощью "),e("strong",[t._v("ip route")]),t._v(" .")]),t._v(" "),e("p",[t._v("В "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html",title:"Д.1.  маршрут",target:"_blank",rel:"noopener noreferrer"}},[t._v("разделе D.1 « "),e("strong",[t._v("маршрут")]),t._v(" »"),e("OutboundLink")],1),t._v(" мы использовали два классических примера добавления сетевого маршрута (в сеть нашего поставщика услуг из ) и маршрута к хосту. Давайте посмотрим на разницу в синтаксисе команды "),e("strong",[t._v("ip route")]),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.16. Добавление статического маршрута в сеть с помощью route add , ср. "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html#ex-tools-route-add-net",title:"Пример Г.4.  Добавление статического маршрута к сетевому маршруту",target:"_blank",rel:"noopener noreferrer"}},[t._v("Пример D.4, «Добавление статического маршрута в добавление сетевого маршрута »"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Это один из самых простых примеров синтаксиса ip "),e("strong",[t._v("route")]),t._v(" . Как вы помните, вы можете добавить маршрут к сети назначения только через уже доступный шлюз. В этом случае "),e("code",[t._v("masq-gw")]),t._v("уже известен маршрут до 192.168.100.1 ( "),e("code",[t._v("service-router")]),t._v("). Теперь любые пакеты, привязанные к 10.38.0.0/16, будут пересылаться на 192.168.100.1.")]),t._v(" "),e("p",[t._v("Другие интересные примеры этой команды связаны с использованием "),e("code",[t._v("prohibit")]),t._v("и "),e("code",[t._v("from")]),t._v(". Использование "),e("code",[t._v("prohibit")]),t._v("заставит маршрутизатор сообщить, что запрошенный пункт назначения недоступен. Если вы знаете сетевой блок, на котором размещена служба, в которой вы не заинтересованы, чтобы разрешить доступ вашим пользователям, это эффективный способ заблокировать попытки исходящего подключения.")]),t._v(" "),e("p",[t._v("Давайте посмотрим на пример вывода "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-tcpdump.html",title:"Г.5.  tcpdump",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("tcpdump")]),e("OutboundLink")],1),t._v(" , который показывает "),e("code",[t._v("prohibit")]),t._v("маршрут в действии.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.17. Добавление "),e("code",[t._v("prohibit")]),t._v("маршрута с помощью route add")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Сравните ICMP-пакет, возвращенный отправителю в этом случае, с "),e("a",{attrs:{href:"http://linux-ip.net/html/pf-host.html#ex-pf-iptables-reject",title:"Пример 7.1.  Блокировка адресата и использование цели REJECT, ср.  Пример D.17, «Добавление запрещенного маршрута с помощью route add»",target:"_blank",rel:"noopener noreferrer"}},[t._v("ICMP-пакетом, возвращенным,"),e("OutboundLink")],1),t._v(" если вы использовали "),e("strong",[t._v("iptables")]),t._v(" и "),e("code",[t._v("REJECT")]),t._v(" цель "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855290832",target:"_blank",rel:"noopener noreferrer"}},[t._v("[52]"),e("OutboundLink")],1),t._v(" . Хотя конечный результат идентичен (пользователь не может добраться до нужного адресата), пользователь получает два разных сообщения об ошибке. С "),e("strong",[t._v("iptables")]),t._v(" "),e("code",[t._v("REJECT")]),t._v(" пользователь видит "),e("code",[t._v("Connection refused")]),t._v(", где пользователь видит "),e("code",[t._v("No route to host")]),t._v("с использованием "),e("code",[t._v("prohibit")]),t._v(". Это всего лишь два варианта управления исходящим доступом из вашей сети.")]),t._v(" "),e("p",[t._v("Предположим, вы не хотите блокировать доступ к этому конкретному хосту для всех ваших пользователей, и эта "),e("code",[t._v("from")]),t._v("опция придет вам на помощь.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.18. Использование "),e("code",[t._v("from")]),t._v("в команде маршрутизации с добавлением маршрута")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Теперь вы эффективно заблокировали исходный IP-адрес 192.168.99.35 от доступа к 209.10.26.51. Любые пакеты, соответствующие этим адресам источника и назначения, будут соответствовать этому маршруту. В этом случае "),e("code",[t._v("masq-gw")]),t._v("будет сгенерировано сообщение об ошибке ICMP, указывающее, что пункт назначения недоступен с административной точки зрения.")]),t._v(" "),e("p",[t._v("Если вы все еще читаете здесь, вы можете видеть, что вариантов определения конкретных маршрутов много и они многогранны. Опция "),e("code",[t._v("src")]),t._v("предоставляет подсказку ядру для выбора исходного адреса. Когда вы работаете с несколькими таблицами маршрутизации и разными классами трафика, вы можете облегчить свою административную нагрузку, разместив несколько разных IP-адресов на своем компьютере с Linux и задав исходный адрес по-разному, в зависимости от типа трафика.")]),t._v(" "),e("p",[t._v("В приведенном ниже примере предположим, что наш маскирующий хост также запускает преобразователь DNS для внутренней сети, и мы выбрали все исходящие пакеты DNS для маршрутизации в соответствии с таблицей 7 "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855276096",target:"_blank",rel:"noopener noreferrer"}},[t._v("53 []"),e("OutboundLink")],1),t._v(" . Теперь любой пакет, исходящий из этого ящика (или замаскированный через эту таблицу), будет иметь исходный IP-адрес, равный 205.254.211.198.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.19. Использование "),e("code",[t._v("src")]),t._v("в команде маршрутизации с добавлением маршрута")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("ИСПРАВИТЬ МЕНЯ!! Мне пока не о чем сказать "),e("code",[t._v("nexthop")]),t._v(", потому что я никогда не использовал его, это касается "),e("code",[t._v("equalize")]),t._v("и "),e("code",[t._v("onlink")]),t._v("также. Если у кого-то есть несколько примеров, которые он/она хотел бы внести, я бы хотел услышать.")]),t._v(" "),e("p",[t._v("Существуют и другие варианты "),e("strong",[t._v("добавления ip route")]),t._v(" , описанные в подробной документации Алексея "),e("strong",[t._v("по iproute2")]),t._v(" . Для дальнейших исследований я предложил приобрести и прочитать это руководство.")]),t._v(" "),e("h3",{attrs:{id:"д-2-4-добавление-маршрута-по-умолчанию-с-помощью-ip-route-add-default"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-4-добавление-маршрута-по-умолчанию-с-помощью-ip-route-add-default"}},[t._v("#")]),t._v(" Д.2.4. Добавление маршрута по умолчанию с помощью "),e("strong",[t._v("ip route add default")])]),t._v(" "),e("p",[t._v("Естественно, одним из самых важных маршрутов на машине является маршрут по умолчанию. Добавление маршрута по умолчанию — одна из самых простых операций с "),e("strong",[t._v("ip route")]),t._v(" .")]),t._v(" "),e("p",[t._v("Нам нужна ровно одна часть информации, чтобы установить маршрут по умолчанию на машине. Это IP-адрес шлюза. Синтаксис команды чрезвычайно прост и, если не считать использования "),e("code",[t._v("via")]),t._v("вместо "),e("code",[t._v("gw")]),t._v(", это почти та же команда, что и эквивалентный "),e("strong",[t._v("маршрут -n")]),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.20. Установка маршрута по умолчанию с помощью ip route add default")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("h3",{attrs:{id:"д-2-5-настроика-nat-с-ip-route-add-nat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-5-настроика-nat-с-ip-route-add-nat"}},[t._v("#")]),t._v(" Д.2.5. Настройка NAT с "),e("strong",[t._v("ip route add nat")])]),t._v(" "),e("p",[t._v("Обязательно ознакомьтесь с "),e("a",{attrs:{href:"http://linux-ip.net/html/ch-nat.html",title:"Глава 5. Преобразование сетевых адресов (NAT)",target:"_blank",rel:"noopener noreferrer"}},[t._v("главой 5, "),e("em",[t._v("Трансляция сетевых адресов (NAT)")]),e("OutboundLink")],1),t._v(" для полного рассмотрения вопросов, связанных с трансляцией сетевых адресов (NAT). Если вы здесь, чтобы узнать немного больше о том, как настроить NAT в вашей сети, то вы должны знать, что ip "),e("strong",[t._v("route add nat")]),t._v(" — это только половина решения. Вы должны понимать, что выполнение NAT с помощью "),e("strong",[t._v("iproute2")]),t._v(" включает один компонент для перезаписи входящего пакета ( "),e("strong",[t._v("ip route add nat")]),t._v(" ) и другую команду для перезаписи исходящего пакета ( "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-rule.html#tools-ip-rule-add-nat",title:"Г.3.4.  ip правило добавить nat",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip rule add nat")]),e("OutboundLink")],1),t._v("). Если вы установите только половину системы, ваш NAT будет работать только наполовину или не будет работать вообще, в зависимости от того, как вы определяете «работу».")]),t._v(" "),e("p",[t._v("Алексей четко документирует в приложении к руководству "),e("strong",[t._v("iproute2")]),t._v(" , что NAT, предоставляемый пакетом "),e("strong",[t._v("iproute2")]),t._v(" , не имеет состояния. Это явно отличается от NAT с сетевым фильтром. Обратитесь к "),e("a",{attrs:{href:"http://linux-ip.net/html/nat-dnat.html",title:"5.5.  NAT назначения с сетевым фильтром (DNAT)",target:"_blank",rel:"noopener noreferrer"}},[t._v("Разделу 5.5, «Назначение NAT с netfilter (DNAT)»"),e("OutboundLink")],1),t._v(" и "),e("a",{attrs:{href:"http://linux-ip.net/html/state-conntrack.html",title:"8.3.  Отслеживание соединений Netfilter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Разделу 8.3, «Отслеживание подключения Netfilter»,"),e("OutboundLink")],1),t._v(" чтобы лучше ознакомиться с отслеживанием подключения и поддержкой трансляции сетевых адресов, доступной в netfilter.")]),t._v(" "),e("p",[t._v("Команда "),e("strong",[t._v("ip route add nat")]),t._v(" используется для перезаписи адреса назначения пакета с одного IP-адреса или диапазона на другой IP-адрес или диапазон. Инструменты "),e("strong",[t._v("iproute2")]),t._v(" могут работать только со всем IP-пакетом. "),e("strong",[t._v("Непосредственно в пакете iproute2")]),t._v(" не предусмотрена поддержка условной перезаписи на основе порта назначения дейтаграммы UDP или сегмента TCP. Это весь пакет, каждый пакет и ничего, кроме пакета "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855243504",target:"_blank",rel:"noopener noreferrer"}},[t._v("[54]"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.21. Создание маршрута NAT для одного IP с ip route add nat")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Запись маршрута, которую мы только что сделали, указывает ядру переписать любой входящий пакет, связанный с 205.254.211.17, на 192.168.100.17. Фактическая перезапись пакета происходит на этапе маршрутизации пакетов, проходящих через ядро. Это важная деталь, более подробно освещенная в "),e("a",{attrs:{href:"http://linux-ip.net/html/nat-stateless-pf-interaction.html",title:"5.4.  NAT без сохранения состояния и фильтрация пакетов",target:"_blank",rel:"noopener noreferrer"}},[t._v("Разделе 5.4, «NAT без сохранения состояния и фильтрация пакетов»"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("iproute2")]),t._v(" может поддерживать преобразование сетевых адресов не только для отдельных IP-адресов, но и для целых сетевых диапазонов. Синтаксис по существу аналогичен приведенному выше синтаксису, но вместо одного IP-адреса используется сетевой адрес CIDR.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.22. Создание маршрута NAT для всей сети с помощью ip route add nat")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("В этом примере мы добавляем маршрут для всей сети. Любые IP-пакеты, поступающие к нам и предназначенные для любого адреса между 205.254.211.32 и 205.254.211.39, будут перезаписаны на соответствующий адрес в диапазоне от 192.168.100.32 до 192.168.100.39. Это сокращенный способ указать несколько переводов с помощью нотации CIDR.")]),t._v(" "),e("p",[t._v("Опять же, это только половина истории NAT с "),e("strong",[t._v("iproute2")]),t._v(" . Обязательно прочитайте раздел ниже для получения информации об использовании "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-rule.html#tools-ip-rule-add-nat",title:"Г.3.4.  ip правило добавить nat",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("правила ip add nat")]),e("OutboundLink")],1),t._v(" в дополнение к "),e("a",{attrs:{href:"http://linux-ip.net/html/ch-nat.html",title:"Глава 5. Преобразование сетевых адресов (NAT)",target:"_blank",rel:"noopener noreferrer"}},[t._v("Главе 5, "),e("em",[t._v("Трансляция сетевых адресов (NAT)")]),e("OutboundLink")],1),t._v(" , которая предоставит более полную документацию по поддержке NAT в Linux. Не забудьте использовать "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-flush-cache",title:"Д.2.10.  сброс кэша IP-маршрута",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route flush cache")]),e("OutboundLink")],1),t._v(" после добавления NAT-маршрутов и соответствующих NAT-правил "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855220208",target:"_blank",rel:"noopener noreferrer"}},[t._v("[55]"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("h3",{attrs:{id:"д-2-6-удаление-маршрутов-с-помощью-ip-route-del"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-6-удаление-маршрутов-с-помощью-ip-route-del"}},[t._v("#")]),t._v(" Д.2.6. Удаление маршрутов с помощью "),e("strong",[t._v("ip route del")])]),t._v(" "),e("p",[t._v("Команда "),e("strong",[t._v("ip route del")]),t._v(" имеет точно такой же синтаксис, что и команда "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-add",title:"Д.2.3.  Использование ip route add для заполнения таблицы маршрутизации",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route add")]),e("OutboundLink")],1),t._v(" , поэтому, если вы знакомы с синтаксисом, это будет несложно.")]),t._v(" "),e("p",[t._v("На самом деле почти тривиально удалить маршруты в командной строке с помощью "),e("strong",[t._v("ip route del")]),t._v(" . Вы можете просто указать маршрут, который хотите удалить, с помощью команды "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show",title:"Д.2.1.  Отображение таблицы маршрутизации с ip route show",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route show")]),e("OutboundLink")],1),t._v(" и дословно добавить строку вывода к "),e("strong",[t._v("ip route del")]),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.23. Удаление маршрутов с помощью ip route del "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855208128",target:"_blank",rel:"noopener noreferrer"}},[t._v("[56]"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Мы определили сетевой маршрут к 10.38.0.0/16 как маршрут, который мы хотели удалить, и просто добавили описание маршрута к нашей команде "),e("strong",[t._v("ip route del .")])]),t._v(" "),e("p",[t._v("Эта команда может использоваться для удаления маршрутов, таких как широковещательные маршруты и маршруты к локально размещенным IP-адресам, в дополнение к манипулированию любыми другими таблицами маршрутизации. Это означает, что вы можете вызвать очень странные проблемы на своем компьютере, непреднамеренно удалив маршруты, особенно маршруты к локально размещенным IP-адресам.")]),t._v(" "),e("h3",{attrs:{id:"д-2-7-изменение-существующих-маршрутов-с-изменением-ip-маршрута"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-7-изменение-существующих-маршрутов-с-изменением-ip-маршрута"}},[t._v("#")]),t._v(" Д.2.7. Изменение существующих маршрутов с "),e("strong",[t._v("изменением IP-маршрута")])]),t._v(" "),e("p",[t._v("Иногда вам может понадобиться удалить маршрут и заменить его другим. К счастью, это можно сделать атомарно с помощью "),e("strong",[t._v("изменения маршрута ip")]),t._v(" .")]),t._v(" "),e("p",[t._v("Давайте изменим маршрут по умолчанию на тристане с помощью этой команды.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.24. Изменение существующих маршрутов с изменением IP-маршрута")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("Если вы используете команду "),e("strong",[t._v("ip route change")]),t._v(" , вы должны знать, что она не передает информацию об изменении состояния таблицы маршрутизации в кеш маршрутизации, так что это еще одно хорошее место, где можно привыкнуть к использованию "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-flush-cache",title:"Д.2.10.  сброс кэша IP-маршрута",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route flush cache")]),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[t._v("Больше нечего сказать об использовании этой команды. Если вы не хотите использовать "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-del",title:"Д.2.6.  Удаление маршрутов с помощью ip route del",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route del,")]),e("OutboundLink")],1),t._v(" за которым следует "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-add",title:"Д.2.3.  Использование ip route add для заполнения таблицы маршрутизации",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route add,")]),e("OutboundLink")],1),t._v(" вы можете использовать "),e("strong",[t._v("ip route change")]),t._v(" .")]),t._v(" "),e("h3",{attrs:{id:"д-2-8-программное-получение-информации-о-маршруте-с-помощью-ip-route-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-8-программное-получение-информации-о-маршруте-с-помощью-ip-route-get"}},[t._v("#")]),t._v(" Д.2.8. Программное получение информации о маршруте с помощью "),e("strong",[t._v("ip route get")])]),t._v(" "),e("p",[t._v("При настройке таблиц маршрутизации не всегда достаточно вручную искать пункт назначения. Особенно с большими таблицами маршрутизации это может стать довольно скучным и трудоемким занятием. К счастью, "),e("strong",[t._v("ip route get")]),t._v(" элегантно решает проблему. Имитируя запрос для указанного пункта назначения, "),e("strong",[t._v("ip route get")]),t._v(" запускает алгоритм выбора маршрута. Когда это будет завершено, он распечатает результирующий путь к месту назначения. В некотором смысле это почти эквивалентно отправке пакета эхо-запроса ICMP с последующим использованием "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show-cache",title:"Г.2.2.  Отображение кеша маршрутизации с ip route show cache",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route show cache")]),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.25. Тестирование таблиц маршрутизации с помощью ip route get")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("Для случайного использования "),e("strong",[t._v("ip route get")]),t._v(" — бесценный инструмент. Очевидным побочным эффектом использования "),e("strong",[t._v("ip route является")]),t._v(" увеличение количества использований каждой затронутой записи в кэше маршрутизации. Хотя это не проблема, это изменит количество пакетов, которые использовали этот конкретный маршрут. Если вы используете "),e("strong",[t._v("ip")]),t._v(" для подсчета исходящих пакетов (люди делали это!), вы должны быть осторожны с этой командой.")]),t._v(" "),e("h3",{attrs:{id:"д-2-9-очистка-таблиц-маршрутизации-с-помощью-ip-route-flush"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-9-очистка-таблиц-маршрутизации-с-помощью-ip-route-flush"}},[t._v("#")]),t._v(" Д.2.9. Очистка таблиц маршрутизации с помощью "),e("strong",[t._v("ip route flush")])]),t._v(" "),e("p",[t._v("Опция "),e("code",[t._v("flush")]),t._v("при использовании с "),e("strong",[t._v("ip route")]),t._v(" очищает таблицу маршрутизации или удаляет маршрут для определенного пункта назначения. В "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ex-tools-ip-route-flush",title:"Пример Г.26.  Удаление определенного маршрута и очистка таблицы маршрутизации с помощью сброса маршрута ip",target:"_blank",rel:"noopener noreferrer"}},[t._v("примере D.26, «Удаление определенного маршрута и очистка таблицы маршрутизации с помощью ip route flush »"),e("OutboundLink")],1),t._v(" , мы сначала удалим маршрут для сети назначения с помощью "),e("strong",[t._v("ip route flush")]),t._v(" , а затем удалим все маршруты в таблице маршрутизации. главная таблица маршрутизации одной командой.")]),t._v(" "),e("p",[t._v("Если вы не хотите удалять маршруты вручную, вы можете быстро очистить все маршруты в таблице, указав идентификатор таблицы в команде "),e("strong",[t._v("ip route flush")]),t._v(" .")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.26. Удаление определенного маршрута и очистка таблицы маршрутизации с помощью сброса маршрута ip")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@masq-gw]# \n")])])]),e("p",[t._v("Обратите внимание, что вы должны проявлять осторожность при использовании "),e("strong",[t._v("таблицы сброса маршрутов ip,")]),t._v(" потому что вы можете легко уничтожить свой собственный маршрут к машине, указав основную таблицу маршрутизации или таблицу маршрутизации, которая используется для отправки пакетов на вашу рабочую станцию. Естественно, это не проблема, если вы подключены к машине через последовательный порт, модем, консоль или другое внешнее соединение.")]),t._v(" "),e("h3",{attrs:{id:"д-2-10-сброс-кэша-ip-маршрута"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-10-сброс-кэша-ip-маршрута"}},[t._v("#")]),t._v(" Д.2.10. "),e("strong",[t._v("сброс кэша IP-маршрута")])]),t._v(" "),e("p",[t._v("Выше, в "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-show-cache",title:"Г.2.2.  Отображение кеша маршрутизации с ip route show cache",target:"_blank",rel:"noopener noreferrer"}},[t._v("разделе D.2.2, «Отображение кеша маршрутизации с помощью "),e("strong",[t._v("ip route show cache")]),t._v(" »"),e("OutboundLink")],1),t._v(" , мы рассмотрели содержимое кеша маршрутизации, хеш-таблицы в ядре, которая содержит недавно использованные маршруты. Цитируя Джона С. Денкера, вы не должны забывать использовать "),e("strong",[t._v("ip route flush cache")]),t._v(" после того, как вы изменили таблицы маршрутизации; «иначе изменения вступят в силу только после какой-то безумно невоспроизводимой задержки». "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#ftn.idm140337855142768",target:"_blank",rel:"noopener noreferrer"}},[t._v("[57]"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Поскольку ядро ​​обращается к кешу маршрутизации перед получением нового маршрута из таблиц маршрутизации, "),e("strong",[t._v("ip route flush cache")]),t._v(" очищает кеш от любых данных. Теперь, когда ядро ​​обращается к кешу маршрутизации, чтобы найти наилучший маршрут к пункту назначения, оно обнаруживает, что кеш пуст. Затем он просматривает базу данных политик маршрутизации и таблицы маршрутизации. Когда ядро ​​находит маршрут, оно вводит только что выбранный пункт назначения в кеш маршрутизации.")]),t._v(" "),e("p",[e("strong",[t._v("Пример Г.27. Очистка кеша маршрутизации с помощью ip route flush cache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[root@tristan]# \n")])])]),e("p",[t._v("При внесении изменений в маршрутизацию в Linux-боксе вы можете сэкономить время на устранение неполадок (и путаницу), выработав привычку завершать свои команды маршрутизации с помощью "),e("strong",[t._v("ip route flush cache")]),t._v(" .")]),t._v(" "),e("h3",{attrs:{id:"д-2-11-резюме-использования-ip-route"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#д-2-11-резюме-использования-ip-route"}},[t._v("#")]),t._v(" Д.2.11. Резюме использования "),e("strong",[t._v("ip route")])]),t._v(" "),e("p",[t._v("С этим обзором использования утилиты "),e("strong",[t._v("ip route")]),t._v(" вы должны быть готовы шагнуть на более продвинутую территорию, чтобы использовать несколько таблиц маршрутизации, использовать преимущества специальных типов маршрутов, использовать преобразование сетевых адресов и собирать подробную статистику об использовании вашей сети. таблицы маршрутизации.")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855371744",target:"_blank",rel:"noopener noreferrer"}},[t._v("[49]"),e("OutboundLink")],1),t._v(" Пока я намерен специально пренебречь обсуждением мостовых и широковещательных адресов. Предположим простой Ethernet, где вся IP-сеть находится на одном концентраторе или коммутаторе.")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855369408",target:"_blank",rel:"noopener noreferrer"}},[t._v("[50]"),e("OutboundLink")],1),t._v(" Когда пользователь инициирует подключение к локальному хосту (скажем, к локальному хосту: 25, где прослушивается частный SMTP-сервер), подключение может, конечно, исходить с IP-адреса, назначенного любому из интерфейсов Ethernet. Однако имеет смысл установить исходный IP-адрес 127.0.0.1, поскольку соединение фактически инициируется с локального компьютера. Некоторые службы, работающие на локальном компьютере, полагаются на петлевой интерфейс и ограничивают входящие соединения исходными адресами 127.0.0.1. Честно говоря, я нахожу это вполне разумным для сервисов, которые не предназначены для публичного использования.")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855328128",target:"_blank",rel:"noopener noreferrer"}},[t._v("[51]"),e("OutboundLink")],1),t._v(" Будьте осторожны с использованием "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#tools-ip-route-get",title:"Д.2.8.  Программное получение информации о маршруте с помощью ip route get",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("ip route get")]),e("OutboundLink")],1),t._v(" и "),e("strong",[t._v("ip route show cache,")]),t._v(" поскольку "),e("strong",[t._v("ip route get")]),t._v(" неявно вызывает поиск маршрута, тем самым увеличивая используемый счетчик на маршруте и сбрасывая возраст. Это изменит статистику, сообщаемую "),e("strong",[t._v("ip -s route show cache")]),t._v(" .")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855290832",target:"_blank",rel:"noopener noreferrer"}},[t._v("[52]"),e("OutboundLink")],1),t._v(" Обратите внимание, что в примере с перекрестными ссылками я использовал "),e("strong",[t._v("iptables")]),t._v(" . Такого же поведения следует ожидать и с "),e("strong",[t._v("ipchains")]),t._v(" . (У кого-нибудь есть доказательства?)")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855276096",target:"_blank",rel:"noopener noreferrer"}},[t._v("[53]"),e("OutboundLink")],1),t._v(" Если вам интересно, как осуществляется подобная магия, вам следует прочитать "),e("a",{attrs:{href:"http://linux-ip.net/html/adv-rpdb.html#adv-routing-fwmark",title:"10.3.2.  Использование fwmark для маршрутизации политик",target:"_blank",rel:"noopener noreferrer"}},[t._v("Раздел 10.3.2, «Использование fwmark для маршрутизации на основе политик»"),e("OutboundLink")],1),t._v(" .")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855243504",target:"_blank",rel:"noopener noreferrer"}},[t._v("[54]"),e("OutboundLink")],1),t._v(" Это не должно приводить вас к мысли, что это невозможно сделать. Это все-таки линукс! Путем маршрутизации через fwmark и использования "),e("code",[t._v("--mark")]),t._v("опции "),e("strong",[t._v("ipchains")]),t._v(" или цели и"),e("code",[t._v("--set-mark")]),t._v("опции MARK в "),e("strong",[t._v("iptables")]),t._v(" вы можете выполнять условную маршрутизацию на основе характеристик и содержимого пакета.")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855220208",target:"_blank",rel:"noopener noreferrer"}},[t._v("[55]"),e("OutboundLink")],1),t._v(" Вы всегда можете использовать мой "),e("a",{attrs:{href:"http://linux-ip.net/html/scripts-nat.html#ex-sc-nat",title:"Пример 11.3.  Сценарий инициализации статического NAT SysV",target:"_blank",rel:"noopener noreferrer"}},[t._v("сценарий инициализации SysV"),e("OutboundLink")],1),t._v(" и "),e("a",{attrs:{href:"http://linux-ip.net/html/scripts-nat.html#ex-sc-static-nat",title:"Пример 11.4.  Статический файл конфигурации NAT",target:"_blank",rel:"noopener noreferrer"}},[t._v("файл конфигурации"),e("OutboundLink")],1),t._v(" вместо того, чтобы вводить свои собственные команды, однако всегда важно понимать, какой инструмент вы используете.")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855208128",target:"_blank",rel:"noopener noreferrer"}},[t._v("[56]"),e("OutboundLink")],1),t._v(" Обратите внимание, что это та же самая таблица маршрутизации, которая показана в "),e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html#ex-tools-route-show-complex",title:"Пример Г.2.  Просмотр сложной таблицы маршрутизации с маршрутом",target:"_blank",rel:"noopener noreferrer"}},[t._v("Примере D.2, «Просмотр сложной таблицы маршрутизации с помощью route »"),e("OutboundLink")],1),t._v(" , который отображает вывод от "),e("strong",[t._v("route -n")]),t._v(" на "),e("code",[t._v("masq-gw")]),t._v(".")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-route.html#idm140337855142768",target:"_blank",rel:"noopener noreferrer"}},[t._v("[57]"),e("OutboundLink")],1),t._v(" См. это замечание в его "),e("a",{attrs:{href:"http://www.quintillion.com/moat/ipsec+routing/iproute2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("документации"),e("OutboundLink")],1),t._v(" об обходном пути с FreeS/WAN и iproute2, чтобы приблизиться к поведению SPD, более похожему на RFC, для туннеля IPSec в Linux.")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-route.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Пред."),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-routing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Вверх"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/tools-ip-rule.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Следующий"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Д.1. "),e("strong",[t._v("маршрут")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://linux-ip.net/html/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Дом"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Д.3. "),e("strong",[t._v("IP-правило")])])])}),[],!1,null,null,null);e.default=n.exports}}]);