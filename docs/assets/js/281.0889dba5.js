(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{554:function(_,v,t){"use strict";t.r(v);var r=t(14),a=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("https://all-python.ru/osnovy/pep-8.html")]),_._v(" "),v("p",[_._v("Python имеет определенные стандарты кода, которым стараются следовать все программисты. Эти стандарты описаны в документации PEP8.")]),_._v(" "),v("p",[_._v("Любой популярный язык программирования требует, чтобы разные программисты писали примерно одинаковый по стилю код. Отклонение от нормы не вызовет ошибки при выполнении программы, но считается плохим тоном среди профессиональных программистов.")]),_._v(" "),v("h2",{attrs:{id:"почему-важно-стандартизировать-код"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#почему-важно-стандартизировать-код"}},[_._v("#")]),_._v(" Почему важно стандартизировать код?")]),_._v(" "),v("p",[_._v("На самом деле программисты проводят большую часть за анализом кода, а не за его написанием. Это происходит потому, что ничего не пишется с нуля. Берутся уже готовые и отлаженные решения, которые модифицируются под определенный проект. Кроме того, часто необходимо поддерживать уже существующие программы, код которых насчитывает сотни тысяч строк.")]),_._v(" "),v("p",[_._v("Если каждый программист будет писать код с разным стилем, то его анализ станет очень трудной задачей. Поэтому "),v("strong",[_._v("важно, чтобы Python-разработчики следовали определенным соглашениям, которые позволяют стандартизировать код, сделать его более понятным любому специалисту")]),_._v(".")]),_._v(" "),v("p",[_._v("Рекомендации по созданию красивого кода на "),v("a",{attrs:{href:"https://all-python.ru/osnovy/yazyk-programmirovaniya.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("Python"),v("OutboundLink")],1),_._v(" не определяют стиль кода полностью. Поэтому программист может делать некоторые вещи на своё усмотрение, однако он всё ещё должен следовать тем указаниям, которые определены в стандарте.")]),_._v(" "),v("p",[_._v("Внутри команды разработчиков может выработаться особый стиль написания кода, который может в некоторых местах нарушать принятые соглашения. Это нередкая и допустимая ситуация, однако программист должен помнить, что если он уйдет из этой команды, ему придется заново переучиваться писать код в соответствии с принятыми стандартами.")]),_._v(" "),v("h2",{attrs:{id:"разметка-кода-на-python"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#разметка-кода-на-python"}},[_._v("#")]),_._v(" Разметка кода на Python")]),_._v(" "),v("p",[_._v("Этот раздел содержит указания, определяющие, как оформлять код на Python 3 (пробелы, отступы, строки).")]),_._v(" "),v("h3",{attrs:{id:"отступы"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#отступы"}},[_._v("#")]),_._v(" Отступы")]),_._v(" "),v("p",[_._v("Для обозначения нового уровня вложенности используется четыре пробела.")]),_._v(" "),v("p",[v("strong",[_._v("При разделении аргументов "),v("a",{attrs:{href:"https://all-python.ru/osnovy/funktsii.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("функции"),v("OutboundLink")],1),_._v(" на несколько строк размер отступа может быть разным")]),_._v(".")]),_._v(" "),v("p",[_._v("Если это объявление или вызов функций (нет тела функции), то можно либо выравнивать следующие строки по открывающейся скобке:")]),_._v(" "),v("p",[_._v("f1 = func(first_arg, second_arg,\nthird_arg, fourth_arg)")]),_._v(" "),v("p",[_._v("либо использовать четыре пробела, но с обязательным переносом первой строки:")]),_._v(" "),v("p",[_._v("f1 = func(\nfirst_arg, second_arg,\nthird_arg, fourth_arg)")]),_._v(" "),v("p",[_._v("Использовать для продолжения именно 4 пробела — это не обязательное правило для строк продолжения перечисления. Можно использовать и другое количество пробелов, например, 2.")]),_._v(" "),v("p",[_._v("Если после списка аргументов следует еще какой-либо код (например, если это объявляется функция), то к отступу аргументов добавляется еще 4 пробела:")]),_._v(" "),v("p",[_._v("def func(\nfirst_arg, second_arg,\nthird_arg, fourth_arg):\nprint(fourth_arg)")]),_._v(" "),v("p",[_._v("Это делается для того, чтобы отделить аргументы от тела функции.")]),_._v(" "),v("p",[_._v("В случае с "),v("a",{attrs:{href:"https://all-python.ru/osnovy/uslovnye-operatory.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("оператором if"),v("OutboundLink")],1),_._v(", программист может как использовать, так и не использовать экстра отступы:")]),_._v(" "),v("p",[_._v("if(temp > 5 and\ntemp < 25):\nsome_func(some_args[])")]),_._v(" "),v("p",[_._v("if(temp > 5\nand temp < 25):\nsome_func(some_args[])")]),_._v(" "),v("p",[_._v("Если не использовать дополнительные пробелы, то, при желании, можно отделить тело условного оператора однострочным "),v("a",{attrs:{href:"https://all-python.ru/osnovy/kommentarii.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("комментарием"),v("OutboundLink")],1),_._v(". Это может улучшить читаемость в некоторых редакторах кода из-за подсветки комментария.")]),_._v(" "),v("p",[_._v("Закрывающая конструкция в функции или структуре может располагаться под первым символом нижней строки:")]),_._v(" "),v("p",[_._v('names = [\n"John", "Alex",\n"Olivia", "Jacob",\n]')]),_._v(" "),v("p",[_._v("Также её можно поместить в самое начало строки:")]),_._v(" "),v("p",[_._v('f = some_f(\n"str1", "str2",\n"str3", "str4",\n)')]),_._v(" "),v("p",[_._v("Программист также может использовать табуляцию, однако пробелы более предпочтительны. Кроме того, использование и табуляции, и пробелов не просто не приветствуется, но и вызывает ошибки интерпретатора.")]),_._v(" "),v("h3",{attrs:{id:"максимальная-длина-строки"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#максимальная-длина-строки"}},[_._v("#")]),_._v(" Максимальная длина строки")]),_._v(" "),v("p",[_._v("Программист не должен использовать более 79 символов в одной строке. Строки длинного многострочного текста (комментарии, документация) ограничены 72-я символами.")]),_._v(" "),v("p",[_._v("Благодаря этим ограничениям программисты могут открывать сразу несколько файлов с кодом на одном экране, комфортно работать на маленьких экранах (ультрабуки, нетбуки) и легко понимать код.")]),_._v(" "),v("p",[_._v("Круглые скобки — лучший способ реализовать разделение кода на несколько строк. Однако программисты также могут использовать знак обратной косой черты «"),v("code",[_._v("\\")]),_._v("«.")]),_._v(" "),v("h3",{attrs:{id:"бинарные-операторы-и-пробелы"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#бинарные-операторы-и-пробелы"}},[_._v("#")]),_._v(" Бинарные операторы и пробелы")]),_._v(" "),v("p",[_._v("Вокруг бинарного оператора всегда должны ставиться пробелы, иначе читаемость кода будет очень низкой.")]),_._v(" "),v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v("math_rez = a * b – x + y")]),_._v(" "),v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("math_rez=a*b–x+y")]),_._v(" "),v("p",[_._v("Кроме того, если операторы используются в многострочном выражении, то они всегда должны переноситься вместе с правым операндом:")]),_._v(" "),v("p",[_._v("max_sum = (first_sum\n+ second_sum\n+ third_sum)")]),_._v(" "),v("h3",{attrs:{id:"пустые-строки"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#пустые-строки"}},[_._v("#")]),_._v(" Пустые строки")]),_._v(" "),v("p",[_._v("Определения внешних "),v("a",{attrs:{href:"https://all-python.ru/osnovy/klassy.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("классов"),v("OutboundLink")],1),_._v(" и функций окружается двумя пустыми строками (две строки сверху).")]),_._v(" "),v("p",[_._v("Методы внутри класса отделяются одной пустой строкой.")]),_._v(" "),v("p",[_._v("Группы функций можно разделить дополнительной пустой строкой. Группы связанных строк кода можно отделять пустыми строками для того, чтобы было проще разобраться в логике программы.")]),_._v(" "),v("p",[_._v("Нельзя использовать пустые строки между внешним и вложенным блоком кода.")]),_._v(" "),v("h3",{attrs:{id:"кодировка"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#кодировка"}},[_._v("#")]),_._v(" Кодировка")]),_._v(" "),v("p",[_._v("Файлы с исходным кодом на Python 3 всегда должны иметь кодировку UTF-8. Раньше в Python 2 использовалась ASCII.")]),_._v(" "),v("p",[_._v("Если нужно использовать символы других кодировок, следует пользоваться экранирующими последовательностями: \\x, \\u, \\U, \\N.")]),_._v(" "),v("h3",{attrs:{id:"импорт"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#импорт"}},[_._v("#")]),_._v(" Импорт")]),_._v(" "),v("p",[_._v("Импорт каждого нового "),v("a",{attrs:{href:"https://all-python.ru/osnovy/podklyuchenie-modulej.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("модуля"),v("OutboundLink")],1),_._v(" должен происходить в новой строке:")]),_._v(" "),v("p",[_._v("import sys\nimport time")]),_._v(" "),v("p",[_._v("При импорте нескольких частей модуля можно писать их в одной строке через запятую:")]),_._v(" "),v("p",[_._v("from time import sleep, ctime")]),_._v(" "),v("p",[_._v("Подключение модулей всегда находятся в начале файла, ниже строк документации и выше объявления констант.")]),_._v(" "),v("p",[_._v("Импорты должны быть разделены по группам, между которыми ставится пустая строка:")]),_._v(" "),v("ol",[v("li",[_._v("Стандартные библиотеки.")]),_._v(" "),v("li",[_._v("Сторонние библиотеки.")]),_._v(" "),v("li",[_._v("Другие модули проекта.")])]),_._v(" "),v("p",[_._v("Использовать «*» при импорте считается плохим тоном. Дело в том, что такой импорт не дает представления об именах, которые находятся в импортированном пространстве имен, что не только сбивает с толку, но и может привести к ошибкам.")]),_._v(" "),v("h2",{attrs:{id:"кавычки-в-строках"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#кавычки-в-строках"}},[_._v("#")]),_._v(" Кавычки в строках")]),_._v(" "),v("p",[_._v("В Python можно использовать как одинарные, так и двойные кавычки. Однако, если в "),v("a",{attrs:{href:"https://all-python.ru/osnovy/stroki.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("строке"),v("OutboundLink")],1),_._v(" используются двойные кавычки, то программист должен выделять строку одинарными и наоборот. Это позволяет повысить читаемость строки.")]),_._v(" "),v("p",[_._v("Для строк документации обязательно используется три двойных кавычки. Более подробнее это описано в стандарте PEP 257.")]),_._v(" "),v("h2",{attrs:{id:"пробелы-в-выражениях-и-операторах"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#пробелы-в-выражениях-и-операторах"}},[_._v("#")]),_._v(" Пробелы в выражениях и операторах")]),_._v(" "),v("p",[_._v("При правильном применении пробелы повышают читаемость кода, однако, в определенных ситуациях следует избегать их использования.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Внутри фигурных, круглых или квадратных скобок.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v('mix_arr = ("John", [176, 70], {"age" : 14})')])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v('mix_arr = ( "John", [ 176, 70 ], { "age" : 14 } )')])])])]),_._v(" "),v("li",[v("p",[_._v("Между запятой и закрывающей скобкой.")])]),_._v(" "),v("li",[v("p",[_._v("Перед запятой, точкой или двоеточием. "),v("strong",[_._v("Однако в операции среза двоеточие должно иметь одинаковое количество пробелов с обеих сторон")]),_._v(".")]),_._v(" "),v("ul",[v("li",[_._v("Правильно: "),v("code",[_._v("mix_arr[0:2]")]),_._v(" или "),v("code",[_._v("mix_arr[0 : 2]")])]),_._v(" "),v("li",[_._v("Неправильно: "),v("code",[_._v("mix_arr[0 :2]")]),_._v(" или "),v("code",[_._v("mix_arr[0: 2]")])])])]),_._v(" "),v("li",[v("p",[_._v("Между именем функции и скобкой с передаваемыми в неё аргументами.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v("custom_function(args)")])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("custom_function (args)")])])])]),_._v(" "),v("li",[v("p",[_._v("Нельзя использовать более одного пробела, чтобы выравнивать операторы присваивания разных выражений.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v("weight = 70\nheight = 1,76\nbody_mass_index = 22,5")])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("weight          = 70\nheight          = 1,76\nbody_mass_index = 22,5")])])])]),_._v(" "),v("li",[v("p",[_._v("Все операторы присваивания и сравнения должны отделяться от операндов пробелами.")])]),_._v(" "),v("li",[v("p",[_._v("Если в выражении используются операторы с разным приоритетом, и нужно подчеркнуть это, допускается использовать пробелы только вокруг этих операторов.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Пример:")]),_._v(" "),v("p",[_._v("y = 2*x – 1/x")])])])]),_._v(" "),v("li",[v("p",[_._v("Если знак присваивания используется для задания параметра по умолчанию или именного аргумента, то он не отделяется пробелами.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Пример:")]),_._v(" "),v("p",[_._v("def graph(x=0.0, y=0.0)")])])])]),_._v(" "),v("li",[v("p",[_._v("Не пишите несколько инструкций в одной строке (разделенных точкой с запятой).")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("x = y + 1; y = y + 1; x = y * 1.1")])])])]),_._v(" "),v("li",[v("p",[_._v("Если тело "),v("a",{attrs:{href:"https://all-python.ru/osnovy/tsikly.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("цикла"),v("OutboundLink")],1),_._v(" состоит из одной короткой строки, то его можно писать в той же строке, что и цикл.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Пример:")]),_._v(" "),v("p",[_._v("while isAlive: increase_hunger()")])])])])]),_._v(" "),v("h2",{attrs:{id:"использование-запятых"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#использование-запятых"}},[_._v("#")]),_._v(" Использование запятых")]),_._v(" "),v("p",[_._v("Конечные запятые, обычно, необязательны. Исключением является использование запятых в "),v("a",{attrs:{href:"https://all-python.ru/osnovy/kortezh.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("кортеже"),v("OutboundLink")],1),_._v(", состоящим из одного элемента. В этом случае следует поместить содержимое кортежа в круглые скобки.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v('names = ("John",)')])]),_._v(" "),v("li",[v("p",[_._v("Допускается, но не рекомендуется:")]),_._v(" "),v("p",[_._v('names = "John",')])])]),_._v(" "),v("p",[_._v("Использование запятых особенно актуально при работе с системой контроля версий, когда список значений или аргументов должен постоянно расширяться. В этом случае каждый новый аргумент пишется с новой строки.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v('names = [\n"John",\n"Olivia",\n]')])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v('names = ["John", "Olivia",]')])])]),_._v(" "),v("h2",{attrs:{id:"комментарии"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#комментарии"}},[_._v("#")]),_._v(" Комментарии")]),_._v(" "),v("p",[_._v("Комментарии — это важная часть любого проекта, потому что с их помощью можно понять, как работает код и какие особенности он имеет. Программисты использую комментарии не только для того, чтобы другие специалисты могли понять код, но и чтобы самим не забыть, как и зачем они реализовали те или иные функции.")]),_._v(" "),v("p",[_._v("Комментарии должны отражать суть кода, а не противоречить ему. Если код по какой-то причине изменяется, комментарии также необходимо изменить.")]),_._v(" "),v("p",[v("strong",[_._v("Все комментарии должны быть законченными предложениями, и если первое слово не является идентификатором, то оно должно начинаться с заглавной буквы")]),_._v(".")]),_._v(" "),v("p",[_._v("Все комментарии должны быть написаны на английском языке, даже если программисты не из англоговорящей страны и на данный момент над проектом работают не англоговорящие программисты.")]),_._v(" "),v("p",[_._v("Комментарии можно писать не на английском, если вы уверены на 120%, что этот код никогда не будут смотреть люди не говорящие на вашем языке.")]),_._v(" "),v("h3",{attrs:{id:"блочные-комментарии"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#блочные-комментарии"}},[_._v("#")]),_._v(" Блочные комментарии")]),_._v(" "),v("p",[_._v("Блочные комментарии используются, когда необходимо объяснить действий какого-либо блока кода. Как правило, такие комментарии размещаются над блоком кода на отдельной строке.")]),_._v(" "),v("h1",{attrs:{id:"этот-код-делает-что-то-очень-интересное"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#этот-код-делает-что-то-очень-интересное"}},[_._v("#")]),_._v(" Этот код делает что-то очень интересное")]),_._v(" "),v("p",[_._v("a = 5\nb = 10\na = b - a + a")]),_._v(" "),v("h3",{attrs:{id:"комментарии-«в-строке»"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#комментарии-«в-строке»"}},[_._v("#")]),_._v(" Комментарии «в строке»")]),_._v(" "),v("p",[_._v("Это комментарии, которые объясняют действия строки кода и пишутся в той же строке, что и код. Они должны отделяться от кода не менее чем двумя пробелами.")]),_._v(" "),v("p",[_._v("Такие комментарии не рекомендуется использовать, потому что в большинстве случаев они объясняют очевидные вещи и не несут никакой практической пользы.")]),_._v(" "),v("p",[_._v("a = a / 2 # Деление числа на два")]),_._v(" "),v("p",[_._v("Однако в некоторых случаях они могут быть полезны, когда настоящее назначение строки не очевидно:")]),_._v(" "),v("p",[_._v("a = a / 2 # Получение середины экрана")]),_._v(" "),v("h3",{attrs:{id:"строки-документации"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#строки-документации"}},[_._v("#")]),_._v(" Строки документации")]),_._v(" "),v("p",[_._v("Все открытые модули, функции, классы и их составляющие должны документироваться. Это правило не относится к приватным методам, однако между строкой с «def» и телом метода можно написать комментарий, который описывает назначение метода.")]),_._v(" "),v("p",[_._v("Более подробно про соглашение о документации рассказано в PEP 257. Кавычки, показывающие окончания строк документации, должны переносится на новую строку.")]),_._v(" "),v("p",[_._v('"""Speed determination.')]),_._v(" "),v("p",[_._v('Keyword arguments:\ndistance -- distance traveled in meters\ntime -- time in seconds (default 1)\n"""')]),_._v(" "),v("p",[_._v("Однако, если документация состоит из одной строки, то кавычки не переносятся.")]),_._v(" "),v("p",[_._v('"""Some info about something."""')]),_._v(" "),v("h2",{attrs:{id:"правила-по-выбору-имен"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#правила-по-выбору-имен"}},[_._v("#")]),_._v(" Правила по выбору имён")]),_._v(" "),v("p",[_._v("Соглашения по выбору имён в Python неточны, поэтому не существует списка, полностью определяющего стиль наименований в Python. Для всех новых пакетов и модулей должен использоваться текущий стандарт наименований.")]),_._v(" "),v("p",[_._v("Если по какой-то причине в библиотеке используется собственный стиль имён, нарушающий принятый стандарт, то программист должен писать код в том стиле, который использует библиотека, чтобы не нарушать внутреннюю согласованность кода.")]),_._v(" "),v("h3",{attrs:{id:"главныи-принцип"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#главныи-принцип"}},[_._v("#")]),_._v(" Главный принцип")]),_._v(" "),v("p",[_._v("Если имя является открытой частью интерфейса прикладного программирования, то оно должно отражать не реализацию, а использование.")]),_._v(" "),v("h3",{attrs:{id:"стили-имен"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#стили-имен"}},[_._v("#")]),_._v(" Стили имен")]),_._v(" "),v("p",[_._v("Выбирать имена в Python можно в соответствии с одним из многих стилей. Определить, какой стиль наименования используется, можно независимо от того, для чего он используется.")]),_._v(" "),v("p",[_._v("Обычно используются следующие стили:")]),_._v(" "),v("ul",[v("li",[_._v("b (одиночная строчная буква)")]),_._v(" "),v("li",[_._v("B (одиночная заглавная буква)")]),_._v(" "),v("li",[_._v("lowercase (нижний регистр)")]),_._v(" "),v("li",[_._v("lower_case_with_underscores (нижний регистр с нижней чертой-разделителем)")]),_._v(" "),v("li",[_._v("UPPERCASE (верхний регистр)")]),_._v(" "),v("li",[_._v("UPPER_CASE_WITH_UNDERSCORES (верхний регистр с нижней чертой-разделителем)")]),_._v(" "),v("li",[_._v("CapitalizedWords (CamelCase) – каждое новое слово начинается с заглавной буквы")]),_._v(" "),v("li",[_._v("mixedCase (отличается от предыдущего тем, что первая буква в нижнем регистре)")])]),_._v(" "),v("h3",{attrs:{id:"имена-которые-лучше-не-использовать"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-которые-лучше-не-использовать"}},[_._v("#")]),_._v(" Имена, которые лучше не использовать")]),_._v(" "),v("p",[_._v("Никогда не используйте строчные английские буквы: l («эл»), O (заглавная «о») и I (заглавная «ай»). Заглавная «о» неотличима от нуля, а «l» и «I» друг от друга.")]),_._v(" "),v("p",[_._v("Если всё же возникла необходимость использовать l («эл»), замените её на заглавную «L».")]),_._v(" "),v("h3",{attrs:{id:"имена-пакетов-и-моделеи"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-пакетов-и-моделеи"}},[_._v("#")]),_._v(" Имена пакетов и моделей")]),_._v(" "),v("p",[_._v("Модули должны иметь короткие имена в нижнем регистре. В именах модулей допускается использовать нижние подчеркивания, если это улучшает читаемость.")]),_._v(" "),v("p",[_._v("Если модуль на C или C++ сопровождается модулем Python, обеспечивающим более высокоуровневый интерфейс, то имя C/C++ модуля начинается с символа нижнего подчеркивания (_modulename).")]),_._v(" "),v("h3",{attrs:{id:"имена-классов"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-классов"}},[_._v("#")]),_._v(" Имена классов")]),_._v(" "),v("p",[_._v("Классам дают имена в соответствии со стилем наименования CapitalizedWords.")]),_._v(" "),v("h3",{attrs:{id:"имена-исключении"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-исключении"}},[_._v("#")]),_._v(" Имена исключений")]),_._v(" "),v("p",[_._v("Из-за того что "),v("a",{attrs:{href:"https://all-python.ru/osnovy/obrabotka-isklyuchenij.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("исключения"),v("OutboundLink")],1),_._v(" по сути являются классами, к ним применяется то же соглашение об наименованиях, что и для классов.")]),_._v(" "),v("p",[v("strong",[_._v("Программист может добавить суффикс «Error», чтобы подчеркнуть, что исключение является ошибкой.")])]),_._v(" "),v("h3",{attrs:{id:"имена-глобальных-переменных"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-глобальных-переменных"}},[_._v("#")]),_._v(" Имена глобальных переменных")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://all-python.ru/osnovy/oblast-vidimosti.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("Глобальные переменные"),v("OutboundLink")],1),_._v(" именуются по тем же соглашениям, что и функции. Кроме того, глобальные переменные стоит использовать только в пределах одного модуля.")]),_._v(" "),v("p",[_._v("Если модуль предполагается импортировать командой "),v("code",[_._v("from module import *")]),_._v(", следует описать все разрешенные к импорту объекты в "),v("code",[_._v("__all__")]),_._v(". Это предотвращает импорт глобальных переменных, а также импорт тех объектов, которые в соответствии со своей реализацией не должны быть доступны извне.")]),_._v(" "),v("p",[v("code",[_._v("__all__")]),_._v(" — это список доступных для импорта объектов, то есть публичных.")]),_._v(" "),v("h3",{attrs:{id:"имена-функции-и-переменных"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-функции-и-переменных"}},[_._v("#")]),_._v(" Имена функций и переменных")]),_._v(" "),v("p",[_._v("Для имен функций используется нижний регистр. Если необходимо повысить читаемость, можно разделять слова символом нижнего подчеркивания.")]),_._v(" "),v("p",[_._v("Имена "),v("a",{attrs:{href:"https://all-python.ru/osnovy/peremennye.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("переменных"),v("OutboundLink")],1),_._v(" выбираются по тем же правилам, что и имена функций.")]),_._v(" "),v("p",[_._v("В случаях, если требуется сохранить обратную совместимость с библиотекой (например, threading.py), допускается использовать mixedCase.")]),_._v(" "),v("h3",{attrs:{id:"имена-аргументов-функции-и-методов"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-аргументов-функции-и-методов"}},[_._v("#")]),_._v(" Имена аргументов функций и методов")]),_._v(" "),v("p",[_._v("Для методов экземпляра в качестве первого аргумента всегда используется self, а для методов класса — cls.")]),_._v(" "),v("p",[_._v("Если аргумент функции имеет имя, которое конфликтует с зарезервированным ключевым словом языка, следует добавить в его конец символ нижнего подчеркивания. Это лучше, чем сокращать или менять имя с потерей смысла.")]),_._v(" "),v("ul",[v("li",[_._v("Правильно:"),v("br"),_._v(" "),v("code",[_._v("tuple_")])]),_._v(" "),v("li",[_._v("Неправильно:"),v("br"),_._v(" "),v("code",[_._v("tpl")]),v("br"),_._v(" "),v("code",[_._v("tupl")])])]),_._v(" "),v("h3",{attrs:{id:"имена-переменных-и-методов-экземпляров-класса"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#имена-переменных-и-методов-экземпляров-класса"}},[_._v("#")]),_._v(" Имена переменных и методов экземпляров класса")]),_._v(" "),v("p",[_._v("Тот же стиль, что и для функций: нижний регистр и нижние подчеркивания при необходимости.")]),_._v(" "),v("p",[_._v("Для закрытых методом и атрибутов экземпляра используйте нижнее подчеркивание в начале имени (_method).")]),_._v(" "),v("p",[_._v("Чтобы не допустить конфликта имён с подклассами, следует использовать два символа нижнего подчеркивания в начале имён. Если класс "),v("code",[_._v("Animal")]),_._v(" имеет атрибут "),v("code",[_._v("__a")]),_._v(", обращение вида "),v("code",[_._v("Animal.__a")]),_._v(" не будет работать (в этом случае можно использовать "),v("code",[_._v("Animal._Animal__a")]),_._v("), так как интерпретатор изменит имя. "),v("strong",[_._v("Двойное подчеркивание следует использовать только для того, чтобы избежать конфликта имён в классах и подклассах")]),_._v(".")]),_._v(" "),v("h3",{attrs:{id:"константы"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#константы"}},[_._v("#")]),_._v(" Константы")]),_._v(" "),v("p",[_._v("Константы определяются на уровне подключения модулей и пишутся в верхнем регистре с разделением слова символами подчеркивания.")]),_._v(" "),v("p",[_._v("Примеры:")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("TOTAL_SUM")])]),_._v(" "),v("li",[v("code",[_._v("SUM")])]),_._v(" "),v("li",[v("code",[_._v("TOTAL")])])]),_._v(" "),v("h2",{attrs:{id:"рекомендации-по-программированию"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#рекомендации-по-программированию"}},[_._v("#")]),_._v(" Рекомендации по программированию")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Код должен быть совместимым с другими реализациями Python, такими как PyPy, IronPython и другие.")])]),_._v(" "),v("li",[v("p",[_._v("Если необходимо сравнить что-либо с такими объектами языка, как "),v("code",[_._v("None")]),_._v(", обязательно используйте операторы "),v("code",[_._v("is")]),_._v(" или "),v("code",[_._v("is not")]),_._v(", а не знак равно."),v("br"),_._v("\nКроме того, никогда не делайте проверку "),v("code",[_._v("if x is not None")]),_._v(" (если "),v("code",[_._v("x")]),_._v(" не является "),v("code",[_._v("None")]),_._v("). Так как это может привести к ошибке, если "),v("code",[_._v("x")]),_._v(" – контейнер.")])]),_._v(" "),v("li",[v("p",[_._v("Выражения «"),v("code",[_._v("is not")]),_._v("» и «"),v("code",[_._v("not … is")]),_._v("» ничем не отличаются друг от друга по функционалу. Однако для лучшей читаемости кода лучше использовать первое выражение.")])]),_._v(" "),v("li",[v("p",[_._v("Не присваивайте переменной лямбда-выражение, потому что преимущество лямбда-выражения в том, что оно может быть встроено в длинный код. Вместо этого объявите функцию с помощью "),v("code",[_._v("def")]),_._v(".")])]),_._v(" "),v("li",[v("p",[_._v("Если нужно перехватить исключение, указывайте конкретную ошибку. Если просто написать "),v("code",[_._v("except")]),_._v(", то компилятор будет перехватывать все исключения, что обязательно приведет к проблемам.")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v('try:\nimport some_module\nexcept ImportError:\nprint("Импорт невозможен")')])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v('try:\nimport some_module\nexcept:\nprint("Я не задал тип ошибки, "\n"вы не сможете использовать ctrl+c")')])])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("Внутри конструкции для отлавливания исключений должно быть минимум кода")]),_._v(". Если это правило не соблюдено, то может быть не очевидно, что стало причиной ошибки.")])]),_._v(" "),v("li",[v("p",[_._v("Чтобы сравнить тип двух объектов, используйте специальную функцию "),v("code",[_._v("isinstance()")]),_._v(", а не оператор "),v("code",[_._v("is")]),_._v(".")]),_._v(" "),v("ul",[v("li",[_._v("Правильно: "),v("code",[_._v("isinstance(object, int)")])]),_._v(" "),v("li",[_._v("Неправильно: "),v("code",[_._v("type(object) is type(99)")])])])]),_._v(" "),v("li",[v("p",[_._v("Нельзя сравнивать переменную с логическим типом с помощью равенства или "),v("code",[_._v("is")]),_._v(".")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Правильно:")]),_._v(" "),v("p",[_._v("if isAlive:")])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("if isAlive == True:")])]),_._v(" "),v("li",[v("p",[_._v("Неправильно:")]),_._v(" "),v("p",[_._v("if isAlive is True:")])])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);