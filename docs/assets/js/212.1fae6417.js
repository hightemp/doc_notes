(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{481:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"как-на-языке-nim-реализовать-полиморфизм"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#как-на-языке-nim-реализовать-полиморфизм"}},[t._v("#")]),t._v(" как на языке nim реализовать полиморфизм")]),t._v(" "),s("p",[t._v("В Nim полиморфизм может быть реализован с помощью шаблонов и дженериков.")]),t._v(" "),s("p",[t._v('Шаблоны позволяют использовать один и тот же код для различных типов данных. Шаблон создается с помощью ключевого слова "template", за которым следует имя шаблона и параметры-типы.')]),t._v(" "),s("p",[t._v("Например, для создания шаблона функции, принимающей два аргумента разных типов и возвращающей результат, можно написать следующий код:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('template add(a, b: typedesc): auto =\n  a + b\n\nproc main =\n  echo add(1, 2) # 3\n  echo add(1.5, 2.5) # 4.0\n  echo add("hello, ", "world!") # "hello, world!"\n')])])]),s("p",[t._v('Дженерики, или обобщенные типы, позволяют создавать типы данных, которые могут быть использованы с разными типами данных. Дженерик создается с помощью ключевого слова "generic", за которым следует имя дженерика и параметры-типы.')]),t._v(" "),s("p",[t._v("Например, для создания дженерика стека, который может содержать элементы различных типов, можно написать следующий код:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\ngeneric Stack[T]:\n  var items: seq[T]\n\n  proc push(item: T) =\n    items.add(item)\n\n  proc pop(): T =\n    assert(items.len > 0)\n    let item = items[items.len-1]\n    items.del(items.len-1)\n    return item\n\n  proc size(): int =\n    return items.len\n\nvar intStack = Stack[int]()\nintStack.push(1)\nintStack.push(2)\necho intStack.pop() # 2\n\nvar floatStack = Stack[float]()\nfloatStack.push(1.5)\nfloatStack.push(2.5)\necho floatStack.pop() # 2.5\n\nvar stringStack = Stack[string]()\nstringStack.push("hello")\nstringStack.push("world!")\necho stringStack.pop() # "world!"\n')])])]),s("h2",{attrs:{id:"как-на-языкке-nim-создать-api-сервис"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#как-на-языкке-nim-создать-api-сервис"}},[t._v("#")]),t._v(" как на языкке nim создать API сервис")]),t._v(" "),s("p",[t._v("Для создания API сервиса на языке Nim можно использовать множество фреймворков и библиотек, включая Jester, Karax, Httpbeast, Httpcore и другие.")]),t._v(" "),s("p",[t._v("Рассмотрим пример создания API-сервиса с помощью Jester.")]),t._v(" "),s("ol",[s("li",[t._v("Установите Jester:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nimble install jester\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Создайте файл server.nim и импортируйте модуль jester:")])]),t._v(" "),s("div",{staticClass:"language-nim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nim"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" jester\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Определите маршруты (routes) вашего API-сервиса с помощью макроса "),s("code",[t._v("route")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-nim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nim"}},[s("code",[t._v("route "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  get"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("respText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v('В этом случае мы создаем маршрут "/hello", который отвечает на GET-запрос и возвращает JSON-объект с одним полем "message".')]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Запустите сервер:")])]),t._v(" "),s("div",{staticClass:"language-nim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nim"}},[s("code",[t._v("jester"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Полный код будет выглядеть так:")]),t._v(" "),s("div",{staticClass:"language-nim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nim"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" jester\n\nroute "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  get"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("respText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\njester"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("Сохраните файл server.nim и запустите сервер командой:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nim c -r server.nim\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("Откройте браузер и введите в адресной строке:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:5000/hello\n")])])]),s("p",[t._v("Вы должны увидеть ответ от сервера в формате JSON:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Теперь вы можете добавлять новые маршруты и обрабатывать запросы в своем API-сервисе на языке Nim!")])])}),[],!1,null,null,null);s.default=n.exports}}]);